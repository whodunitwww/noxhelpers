return function(a)local b=a.Services;local c=a.Tabs;local d=a.Library;local e=a.References;local f=a.MoveToPos;local g=c.Auto:AddLeftGroupbox("Macros","workflow")local h=b.VirtualInputManager;local i=b.UserInputService;local j=b.RunService;local k=b.HttpService;local l=b.Workspace.CurrentCamera;local m=("NoxHub/%s"):format(e.gameName or"Game")local n=("%s/macros.json"):format(m)local o={list={},order={},_hotkeyConn=nil,_hb=nil}local p={changingRepeat=false}local function q(r)if typeof(r)=="EnumItem"and r.EnumType==Enum.KeyCode then return r end;if typeof(r)=="string"then return Enum.KeyCode[r]or Enum.KeyCode[r:upper()]end end;local function s(t)return typeof(t)=="EnumItem"and t.EnumType==Enum.KeyCode and t.Name or nil end;local function u(v)return v=="Right"and 1 or v=="Middle"and 2 or 0 end;local function w(x)if makefolder then pcall(makefolder,x)end end;local function y(z,A)if writefile then pcall(writefile,z,A)end end;local function B(z)if readfile then local C,D=pcall(readfile,z)if C then return D end end end;local function E(F)return{x=F.X,y=F.Y,z=F.Z}end;local function G(H)if type(H)=="table"then return Vector3.new(H.x or 0,H.y or 0,H.z or 0)end end;local function I(J)local K={}for L,M in ipairs(J or{})do if M.type=="KeyTap"or M.type=="KeyHold"then K[#K+1]={type=M.type,key=s(M.key),hold=M.hold}elseif M.type=="MouseClick"then K[#K+1]={type="MouseClick",button=M.button,hold=M.hold}elseif M.type=="Wait"then K[#K+1]={type="Wait",wait=M.wait}elseif M.type=="Teleport"then K[#K+1]={type="Teleport",pos=E(M.pos),speed=M.speed}end end;return K end;local function N(J)local K={}for L,M in ipairs(J or{})do if M.type=="KeyTap"or M.type=="KeyHold"then K[#K+1]={type=M.type,key=q(M.key),hold=M.hold}elseif M.type=="MouseClick"then K[#K+1]={type="MouseClick",button=M.button,hold=M.hold}elseif M.type=="Wait"then K[#K+1]={type="Wait",wait=M.wait}elseif M.type=="Teleport"then K[#K+1]={type="Teleport",pos=G(M.pos),speed=tonumber(M.speed)or 200}end end;return K end;local function O()w(m)local P={order=o.order,macros={}}for Q,R in pairs(o.list)do P.macros[Q]={steps=I(R.steps),interval=R.interval}end;local C,S=pcall(k.JSONEncode,k,P)if C then y(n,S)end end;local function T()local U=B(n)if not U then return end;local C,P=pcall(k.JSONDecode,k,U)if not C or type(P)~="table"then return end;o.list,o.order={},{}if type(P.order)=="table"then for L,V in ipairs(P.order)do o.order[#o.order+1]=V end end;if type(P.macros)=="table"then for Q,R in pairs(P.macros)do o.list[Q]={steps=N(R.steps),interval=tonumber(R.interval)or 1.0,repeatRun=false,running=false,_loopThread=nil,hotkey=nil,hotkeyEnabled=false,lastRun=nil}if not table.find(o.order,Q)then o.order[#o.order+1]=Q end end end end;local function W(t)if not t then return end;h:SendKeyEvent(true,t,false,game)task.wait(0.04)h:SendKeyEvent(false,t,false,game)end;local function X(t,r)if not t then return end;h:SendKeyEvent(true,t,false,game)task.wait(math.max(0,r or 0))h:SendKeyEvent(false,t,false,game)end;local function Y(v,r)local Z=i:GetMouseLocation()local _=u(v)h:SendMouseButtonEvent(Z.X,Z.Y,_,true,game,0)task.wait(math.max(0,r or 0))h:SendMouseButtonEvent(Z.X,Z.Y,_,false,game,0)end;local function a0(J)for L,M in ipairs(J or{})do if M.type=="KeyTap"then W(M.key)elseif M.type=="KeyHold"then X(M.key,M.hold or 0.1)elseif M.type=="MouseClick"then Y(M.button or"Left",M.hold or 0.04)elseif M.type=="Wait"then task.wait(M.wait or 0.2)elseif M.type=="Teleport"and M.pos then local a1=M.pos;local a2=tonumber(M.speed)or 200;local a3=e.humanoidRootPart;if a3 then local a4;pcall(function()a4=f(a1,a2)end)local a5=os.clock()while os.clock()-a5<12 do local a6=e.humanoidRootPart;if not a6 then break end;if(a6.Position-a1).Magnitude<=1.25 then break end;j.Heartbeat:Wait()end;if a4 then pcall(a4)end end end end end;local function a7(Q)local R=o.list[Q]if not R then return end;R.repeatRun=false end;local function a8(Q,a9)local R=o.list[Q]if not R then return end;if a9 then if R.running then return end;task.spawn(function()R.running=true;a0(R.steps or{})R.lastRun=tick()R.running=false end)return end;if R._loopThread then return end;R.repeatRun=true;R.running=true;R._loopThread=task.spawn(function()while R.repeatRun do a0(R.steps or{})R.lastRun=tick()if not R.repeatRun then break end;task.wait(math.max(0.05,R.interval or 1.0))end;R.running=false;R._loopThread=nil end)end;local function aa()if o._hotkeyConn then return end;o._hotkeyConn=i.InputBegan:Connect(function(ab,ac)if ac then return end;for Q,R in pairs(o.list)do if R.hotkeyEnabled and R.hotkey and ab.KeyCode==R.hotkey then a8(Q,true)end end end)end;local function ad()for Q in pairs(o.list)do a7(Q)end end;local ae={gui=nil,holder=nil,_hot=nil,_loop=nil,_logo=nil,_title=nil,_lastHot="",_lastLoop=""}local function af()local C,ag=pcall(function()return gethui and gethui()or b.CoreGui or game:GetService("CoreGui")end)return C and ag or b.Players.LocalPlayer:WaitForChild("PlayerGui")end;local function ah()if ae.gui then ae.gui:Destroy()end;ae.gui,ae.holder,ae._hot,ae._loop=nil,nil,nil,nil;ae._lastHot,ae._lastLoop="",""end;local function ai()if ae.gui and ae.holder then return end;local aj=Instance.new("ScreenGui")aj.Name="Cerberus_MacroHUD"aj.IgnoreGuiInset=true;aj.ResetOnSpawn=false;aj.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;aj.Parent=af()ae.gui=aj;local ak=Instance.new("Frame")ak.Name="Holder"ak.AnchorPoint=Vector2.new(1,0)ak.Position=UDim2.new(1,-20,0,math.floor((l and l.ViewportSize.Y or 1080)*0.05))ak.Size=UDim2.fromOffset(360,10)ak.AutomaticSize=Enum.AutomaticSize.Y;ak.BackgroundColor3=Color3.fromRGB(20,22,28)ak.BackgroundTransparency=0.06;ak.Active=true;ak.Parent=aj;ae.holder=ak;Instance.new("UICorner",ak).CornerRadius=UDim.new(0,12)local al=Instance.new("UIStroke",ak)al.Thickness=1;al.Color=Color3.fromRGB(90,255,140)al.Transparency=0.35;local am=Instance.new("Frame")am.BackgroundColor3=Color3.fromRGB(24,27,34)am.BackgroundTransparency=0.20;am.Size=UDim2.new(1,-16,1,-16)am.Position=UDim2.new(0,8,0,8)am.AutomaticSize=Enum.AutomaticSize.Y;am.Parent=ak;Instance.new("UICorner",am).CornerRadius=UDim.new(0,10)local an=Instance.new("UIPadding",am)an.PaddingTop=UDim.new(0,8)an.PaddingBottom=UDim.new(0,8)an.PaddingLeft=UDim.new(0,8)an.PaddingRight=UDim.new(0,8)local ao=Instance.new("UIListLayout",am)ao.FillDirection=Enum.FillDirection.Vertical;ao.HorizontalAlignment=Enum.HorizontalAlignment.Left;ao.VerticalAlignment=Enum.VerticalAlignment.Top;ao.Padding=UDim.new(0,8)ao.SortOrder=Enum.SortOrder.LayoutOrder;local ap=Instance.new("Frame")ap.BackgroundTransparency=1;ap.AutomaticSize=Enum.AutomaticSize.Y;ap.Size=UDim2.new(1,0,0,0)ap.Parent=am;local aq=Instance.new("UIListLayout",ap)aq.FillDirection=Enum.FillDirection.Horizontal;aq.VerticalAlignment=Enum.VerticalAlignment.Center;aq.Padding=UDim.new(0,8)local ar=Instance.new("ImageLabel")ar.BackgroundTransparency=1;ar.Image="rbxassetid://136497541793809"ar.Size=UDim2.fromOffset(28,28)ar.Parent=ap;ae._logo=ar;local as=Instance.new("TextLabel")as.BackgroundTransparency=1;as.Text="CERBERUS • Macros"as.Font=Enum.Font.GothamSemibold;as.TextSize=20;as.TextColor3=Color3.fromRGB(210,245,225)as.TextXAlignment=Enum.TextXAlignment.Left;as.AutomaticSize=Enum.AutomaticSize.Y;as.Size=UDim2.new(1,-36,0,0)as.Parent=ap;ae._title=as;local at=Instance.new("TextLabel")at.Name="Hotkeys"at.BackgroundTransparency=1;at.RichText=true;at.Font=Enum.Font.Gotham;at.TextSize=18;at.TextColor3=Color3.fromRGB(235,245,240)at.TextXAlignment=Enum.TextXAlignment.Left;at.TextYAlignment=Enum.TextYAlignment.Top;at.TextWrapped=true;at.AutomaticSize=Enum.AutomaticSize.Y;at.Size=UDim2.new(1,0,0,0)at.Text="<b>Hotkeys</b>\nNone"at.Parent=am;ae._hot=at;local au=Instance.new("Frame")au.BackgroundColor3=Color3.fromRGB(80,100,90)au.BackgroundTransparency=0.70;au.Size=UDim2.new(1,0,0,1)au.Parent=am;local av=Instance.new("TextLabel")av.Name="Looping"av.BackgroundTransparency=1;av.RichText=true;av.Font=Enum.Font.Gotham;av.TextSize=18;av.TextColor3=Color3.fromRGB(235,245,240)av.TextXAlignment=Enum.TextXAlignment.Left;av.TextYAlignment=Enum.TextYAlignment.Top;av.TextWrapped=true;av.AutomaticSize=Enum.AutomaticSize.Y;av.Size=UDim2.new(1,0,0,0)av.Text="<b>Looping</b>\nNone"av.Parent=am;ae._loop=av;ak.InputBegan:Connect(function(aw)if aw.UserInputType==Enum.UserInputType.MouseButton1 or aw.UserInputType==Enum.UserInputType.Touch then ae._dragging,ae._dragStart,ae._startPos=true,aw.Position,ak.Position;aw.Changed:Connect(function()if aw.UserInputState==Enum.UserInputState.End then ae._dragging=false end end)end end)ak.InputChanged:Connect(function(aw)if ae._dragging and(aw.UserInputType==Enum.UserInputType.MouseMovement or aw.UserInputType==Enum.UserInputType.Touch)then local D=aw.Position-ae._dragStart;ak.Position=UDim2.new(ae._startPos.X.Scale,ae._startPos.X.Offset+D.X,ae._startPos.Y.Scale,ae._startPos.Y.Offset+D.Y)end end)end;local function ax(ay,az,aA)if ay and az~=aA then ay.Text=az;return az end;return aA end;local function aB()if not(a.Toggles and a.Toggles.MACRO_HUD and a.Toggles.MACRO_HUD.Value)then return end;ai()local function aC(Q,R)local aD;if R.repeatRun then aD=R.running and"LOOP•ACTIVE"or"LOOP•IDLE"else aD=R.running and"RUN"or"READY"end;local aE=R.running and"#5AFF8C"or"#DCEFE5"return string.format('<font color="%s">[%s] %s</font>',aE,aD,Q)end;local aF,aG={},{}for L,Q in ipairs(o.order)do local R=o.list[Q]if R then if R.hotkeyEnabled and R.hotkey then aF[#aF+1]=aC(Q,R)end;if R.repeatRun then aG[#aG+1]=aC(Q,R)end end end;local aH="<b>Hotkeys</b>\n"..(#aF>0 and table.concat(aF,"\n")or"None")local aI="<b>Looping</b>\n"..(#aG>0 and table.concat(aG,"\n")or"None")ae._lastHot=ax(ae._hot,aH,ae._lastHot)ae._lastLoop=ax(ae._loop,aI,ae._lastLoop)end;local aJ,aK=0,0.12;local function aL()if o._hb then return end;o._hb=j.Heartbeat:Connect(function(aM)aJ=aJ+aM;if aJ>=aK then aJ=0;aB()end end)end;local aN=nil;local aO;local function aP(M)if M.type=="KeyTap"then return("KeyTap(%s)"):format(M.key and M.key.Name or"?")end;if M.type=="KeyHold"then return("KeyHold(%s, %.0fms)"):format(M.key and M.key.Name or"?",(M.hold or 0)*1000)end;if M.type=="MouseClick"then return("MouseClick(%s, %.0fms)"):format(M.button or"Left",(M.hold or 0)*1000)end;if M.type=="Wait"then return("Wait(%.0fms)"):format((M.wait or 0)*1000)end;if M.type=="Teleport"then return("TP(%d,%d,%d @ %d/s)"):format(math.floor(M.pos.X),math.floor(M.pos.Y),math.floor(M.pos.Z),M.speed or 200)end;return"Step"end;local aQ=g:AddDropdown("MACRO_Select",{Text="Select Macro",Values={},Default=nil})local function aR()table.sort(o.order,function(aS,aT)return tostring(aS)<tostring(aT)end)aQ:SetValues(o.order)if aN and table.find(o.order,aN)then aQ:SetValue(aN)elseif o.order[1]then aN=o.order[1]aQ:SetValue(aN)else aN=nil;aQ:SetValue(nil)end end;local function aU()local az="Steps: 0"if aN and o.list[aN]then local J=o.list[aN].steps or{}if#J>0 then local K=table.create(#J)for aw,M in ipairs(J)do K[aw]=("%d) %s"):format(aw,aP(M))end;az=table.concat(K,"\n")end end;if aO and aO.SetText then aO:SetText(az,true)end end;local function aV(Q)if o.list[Q]then return false end;o.list[Q]={steps={},interval=1.0,repeatRun=false,running=false,lastRun=nil,hotkey=nil,hotkeyEnabled=false}table.insert(o.order,Q)aN=Q;aR()aU()O()return true end;local function aW(Q)if not o.list[Q]then return end;a7(Q)o.list[Q]=nil;for aw,V in ipairs(o.order)do if V==Q then table.remove(o.order,aw)break end end;if aN==Q then aN=nil end;aR()aU()O()end;local function aX(aY,aZ)if not aY or not aZ or aZ==""or o.list[aZ]then return d:Notify("Invalid or duplicate name.",3)end;local R=o.list[aY]if not R then return end;o.list[aZ]=R;o.list[aY]=nil;for aw,V in ipairs(o.order)do if V==aY then o.order[aw]=aZ;break end end;aN=aZ;aR()O()aB()end;g:AddButton({Text="New Macro",Func=function()local a_,aw,b0="Macro",1,"Macro 1"while o.list[b0]do aw=aw+1;b0=("%s %d"):format(a_,aw)end;aV(b0)d:Notify("Created: "..b0,2)end})g:AddButton({Text="Delete Macro",Func=function()if not aN then return end;aW(aN)d:Notify("Deleted macro.",2)end})g:AddInput("MACRO_Rename",{Text="Rename Selected",Placeholder="Enter new name",Numeric=false,Finished=true,Callback=function(b1)if aN and b1 and b1~=""then aX(aN,b1)end end})aQ:OnChanged(function(F)aN=F;aU()local R=aN and o.list[aN]if R then p.changingRepeat=true;a.Toggles.MACRO_Repeat:SetValue(R.repeatRun)p.changingRepeat=false;a.Options.MACRO_Interval:SetValue(R.interval)end end)g:AddDivider()local b2={"W","A","S","D","Space","LeftShift","LeftControl","E","F","G","Q","R","C","V","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Zero","T","Y","Z","X","B","H","J","K","L","Tab","Backquote"}local b3=g:AddDropdown("MACRO_Key",{Text="Key",Values=b2,Default="E"})g:AddSlider("MACRO_Hold",{Text="Hold (ms)",Default=80,Min=10,Max=2000,Rounding=0})local b4=g:AddDropdown("MACRO_Mouse",{Text="Mouse Button",Values={"Left","Right","Middle"},Default="Left"})g:AddSlider("MACRO_Wait",{Text="Wait (ms)",Default=150,Min=10,Max=3000,Rounding=0})g:AddSlider("MACRO_MoveSpeed",{Text="Teleport Speed (stud/s)",Default=200,Min=50,Max=1000,Rounding=0})local function b5(M)if not aN then return end;local R=o.list[aN]if not R then return end;table.insert(R.steps,M)aU()O()end;g:AddButton({Text="Add Key Tap",Func=function()b5({type="KeyTap",key=q(b3.Value)})end})g:AddButton({Text="Add Key Hold",Func=function()b5({type="KeyHold",key=q(b3.Value),hold=(a.Options.MACRO_Hold.Value or 80)/1000})end})g:AddButton({Text="Add Mouse Click",Func=function()b5({type="MouseClick",button=b4.Value,hold=(a.Options.MACRO_Hold.Value or 80)/1000})end})g:AddButton({Text="Add Wait",Func=function()b5({type="Wait",wait=(a.Options.MACRO_Wait.Value or 150)/1000})end})g:AddButton({Text="Add Teleport",Tooltip="Will teleport you to your current coords",Func=function()local a3=e.humanoidRootPart;if not a3 then return d:Notify("No character.",3)end;b5({type="Teleport",pos=a3.Position,speed=a.Options.MACRO_MoveSpeed.Value})end})g:AddButton({Text="Clear Steps",Func=function()if not aN then return end;d:Notify("Macro cleared",3)local R=o.list[aN]if not R then return end;R.steps={}aU()O()end})if not aO then aO=g:AddLabel("Steps: 0",true)end;aU()g:AddDivider()local b6=g:AddToggle("MACRO_Repeat",{Text="Loop Macro",Default=false})g:AddSlider("MACRO_Interval",{Text="Loop Interval (s)",Default=1.00,Min=0.10,Max=200.00,Rounding=1})local b7=g:AddToggle("MACRO_HotkeyToggle",{Text="Macro Hotkey",Default=false}):AddKeyPicker("MACRO_Hotkey",{Default="",SyncToggleState=false,Mode="Toggle",Text="Macro Hotkey"})a.Options.MACRO_Hotkey:OnChanged(function()if not aN then return end;local R=o.list[aN]if not R then return end;R.hotkey=q(a.Options.MACRO_Hotkey.Value)aa()O()end)a.Toggles.MACRO_HotkeyToggle:OnChanged(function()if not aN then return end;local R=o.list[aN]if not R then return end;if a.Toggles.MACRO_HotkeyToggle.Value and not R.hotkey then d:Notify("Please set a Macro Hotkey key first.",3)a.Toggles.MACRO_HotkeyToggle:SetValue(false)return end;R.hotkeyEnabled=a.Toggles.MACRO_HotkeyToggle.Value;O()end)b6:OnChanged(function()if p.changingRepeat then return end;if not aN then return end;local R=o.list[aN]if not R then return end;local b8=a.Toggles.MACRO_Repeat.Value;if b8 then R.repeatRun=true;if not R._loopThread then a8(aN,false)end else R.repeatRun=false end end)a.Options.MACRO_Interval:OnChanged(function()if not aN then return end;local R=o.list[aN]if not R then return end;R.interval=a.Options.MACRO_Interval.Value;O()end)g:AddButton({Text="Play Once",Func=function()if not aN then d:Notify("Select or create a macro first.",3)return end;a8(aN,true)end})g:AddDivider()g:AddToggle("MACRO_HUD",{Text="Show Macro HUD",Default=false,Callback=function(b9)if b9 then ai()aL()else ah()if o._hb then o._hb:Disconnect()o._hb=nil end end end})g:AddSlider("MACRO_HUD_Scale",{Text="HUD Scale",Default=120,Min=70,Max=180,Rounding=0,Suffix="%",Callback=function(F)local r=(F or 120)/100;if ae.holder then ae.holder.Size=UDim2.fromOffset(360*r,10)if ae._title then ae._title.TextSize=20*r end;if ae._hot then ae._hot.TextSize=18*r end;if ae._loop then ae._loop.TextSize=18*r end;if ae._logo then ae._logo.Size=UDim2.fromOffset(28*r,28*r)end end end})T()if#o.order==0 then aV("Macro 1")end;aR()aU()aa()local ba={}function ba.Unload()for Q,R in pairs(o.list)do R.repeatRun=false end;if o._hotkeyConn then pcall(function()o._hotkeyConn:Disconnect()end)o._hotkeyConn=nil end;if o._hb then pcall(function()o._hb:Disconnect()end)o._hb=nil end;pcall(ah)for L,R in pairs(o.list)do R.running=false;R._loopThread=nil end end;ba.Macros=o;ba.destroyHud=ah;return ba end
