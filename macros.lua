return function(a)local b=a.Services;local c=a.Tabs;local d=a.Library;local e=a.References;local f=a.MoveToPos;local g=c.Auto:AddLeftGroupbox("Macros","workflow")local h=("NoxHub/%s"):format(e.gameName or"Game")local i=("%s/macros.json"):format(h)local j={list={},order={},_hotkeyConn=nil,_hb=nil}local k={changingRepeat=false}local function l(m)if typeof(m)=="EnumItem"and m.EnumType==Enum.KeyCode then return m end;if typeof(m)=="string"then return Enum.KeyCode[m]or Enum.KeyCode[m:upper()]end end;local function n(o)return typeof(o)=="EnumItem"and o.EnumType==Enum.KeyCode and o.Name or nil end;local function p(q)return q=="Right"and 1 or q=="Middle"and 2 or 0 end;local function r(s)if makefolder then pcall(makefolder,s)end end;local function t(u,v)if writefile then pcall(writefile,u,v)end end;local function w(u)if readfile then local x,y=pcall(readfile,u)if x then return y end end end;local function z(A)return{x=A.X,y=A.Y,z=A.Z}end;local function B(C)if type(C)=="table"then return Vector3.new(C.x or 0,C.y or 0,C.z or 0)end end;local function D(E)local F={}for G,H in ipairs(E or{})do if H.type=="KeyTap"or H.type=="KeyHold"then F[#F+1]={type=H.type,key=n(H.key),hold=H.hold}elseif H.type=="MouseClick"then F[#F+1]={type="MouseClick",button=H.button,hold=H.hold}elseif H.type=="Wait"then F[#F+1]={type="Wait",wait=H.wait}elseif H.type=="Teleport"then F[#F+1]={type="Teleport",pos=z(H.pos),speed=H.speed}end end;return F end;local function I(E)local F={}for G,H in ipairs(E or{})do if H.type=="KeyTap"or H.type=="KeyHold"then F[#F+1]={type=H.type,key=l(H.key),hold=H.hold}elseif H.type=="MouseClick"then F[#F+1]={type="MouseClick",button=H.button,hold=H.hold}elseif H.type=="Wait"then F[#F+1]={type="Wait",wait=H.wait}elseif H.type=="Teleport"then F[#F+1]={type="Teleport",pos=B(H.pos),speed=tonumber(H.speed)or 200}end end;return F end;local function J()r(h)local K={order=j.order,macros={}}for L,M in pairs(j.list)do K.macros[L]={steps=D(M.steps),interval=M.interval}end;local x,N=pcall(b.HttpService.JSONEncode,b.HttpService,K)if x then t(i,N)end end;local function O()local P=w(i)if not P then return end;local x,K=pcall(b.HttpService.JSONDecode,b.HttpService,P)if not x or type(K)~="table"then return end;j.list,j.order={},{}if type(K.order)=="table"then for G,Q in ipairs(K.order)do j.order[#j.order+1]=Q end end;if type(K.macros)=="table"then for L,M in pairs(K.macros)do j.list[L]={steps=I(M.steps),interval=tonumber(M.interval)or 1.0,repeatRun=false,running=false,_loopThread=nil,hotkey=nil,hotkeyEnabled=false,lastRun=nil}if not table.find(j.order,L)then j.order[#j.order+1]=L end end end end;local function R(o)if not o then return end;b.VirtualInputManager:SendKeyEvent(true,o,false,game)task.wait(0.04)b.VirtualInputManager:SendKeyEvent(false,o,false,game)end;local function S(o,m)if not o then return end;b.VirtualInputManager:SendKeyEvent(true,o,false,game)task.wait(math.max(0,m or 0))b.VirtualInputManager:SendKeyEvent(false,o,false,game)end;local function T(q,m)local U=b.UserInputService:GetMouseLocation()local V=p(q)b.VirtualInputManager:SendMouseButtonEvent(U.X,U.Y,V,true,game,0)task.wait(math.max(0,m or 0))b.VirtualInputManager:SendMouseButtonEvent(U.X,U.Y,V,false,game,0)end;local function W(E)for G,H in ipairs(E or{})do if H.type=="KeyTap"then R(H.key)elseif H.type=="KeyHold"then S(H.key,H.hold or 0.1)elseif H.type=="MouseClick"then T(H.button or"Left",H.hold or 0.04)elseif H.type=="Wait"then task.wait(H.wait or 0.2)elseif H.type=="Teleport"and H.pos then local X=H.pos;local Y=tonumber(H.speed)or 200;local Z=e.humanoidRootPart;if Z then local _;pcall(function()_=f(X,Y)end)local a0=os.clock()while os.clock()-a0<12 do local a1=e.humanoidRootPart;if not a1 then break end;if(a1.Position-X).Magnitude<=1.25 then break end;b.RunService.Heartbeat:Wait()end;if _ then pcall(_)end end end end end;local function a2(L)local M=j.list[L]if not M then return end;M.repeatRun=false end;local function a3(L,a4)local M=j.list[L]if not M then return end;if a4 then if M.running then return end;task.spawn(function()M.running=true;W(M.steps or{})M.lastRun=tick()M.running=false end)return end;if M._loopThread then return end;M.repeatRun=true;M.running=true;M._loopThread=task.spawn(function()while M.repeatRun do W(M.steps or{})M.lastRun=tick()if not M.repeatRun then break end;task.wait(math.max(0.05,M.interval or 1.0))end;M.running=false;M._loopThread=nil end)end;local function a5()if j._hotkeyConn then return end;j._hotkeyConn=b.UserInputService.InputBegan:Connect(function(a6,a7)if a7 then return end;for L,M in pairs(j.list)do if M.hotkeyEnabled and M.hotkey and a6.KeyCode==M.hotkey then a3(L,true)end end end)end;local function a8()for L in pairs(j.list)do a2(L)end end;local a9={gui=nil,holder=nil,_hot=nil,_loop=nil,_logo=nil,_title=nil,_lastHot="",_lastLoop=""}local function aa()local x,ab=pcall(function()return gethui and gethui()or b.CoreGui or game:GetService("CoreGui")end)return x and ab or b.Players.LocalPlayer:WaitForChild("PlayerGui")end;local function ac()if a9.gui then a9.gui:Destroy()end;a9.gui,a9.holder,a9._hot,a9._loop=nil,nil,nil,nil;a9._lastHot,a9._lastLoop="",""end;local function ad()if a9.gui and a9.holder then return end;local ae=Instance.new("ScreenGui")ae.Name="Cerberus_MacroHUD"ae.IgnoreGuiInset=true;ae.ResetOnSpawn=false;ae.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;ae.Parent=aa()a9.gui=ae;local af=Instance.new("Frame")af.Name="Holder"af.AnchorPoint=Vector2.new(1,0)af.Position=UDim2.new(1,-20,0,math.floor((e.camera and e.camera.ViewportSize.Y or 1080)*0.05))af.Size=UDim2.fromOffset(360,10)af.AutomaticSize=Enum.AutomaticSize.Y;af.BackgroundColor3=Color3.fromRGB(20,22,28)af.BackgroundTransparency=0.06;af.Active=true;af.Parent=ae;a9.holder=af;Instance.new("UICorner",af).CornerRadius=UDim.new(0,12)local ag=Instance.new("UIStroke",af)ag.Thickness=1;ag.Color=Color3.fromRGB(90,255,140)ag.Transparency=0.35;local ah=Instance.new("Frame")ah.BackgroundColor3=Color3.fromRGB(24,27,34)ah.BackgroundTransparency=0.20;ah.Size=UDim2.new(1,-16,1,-16)ah.Position=UDim2.new(0,8,0,8)ah.AutomaticSize=Enum.AutomaticSize.Y;ah.Parent=af;Instance.new("UICorner",ah).CornerRadius=UDim.new(0,10)local ai=Instance.new("UIPadding",ah)ai.PaddingTop=UDim.new(0,8)ai.PaddingBottom=UDim.new(0,8)ai.PaddingLeft=UDim.new(0,8)ai.PaddingRight=UDim.new(0,8)local aj=Instance.new("UIListLayout",ah)aj.FillDirection=Enum.FillDirection.Vertical;aj.HorizontalAlignment=Enum.HorizontalAlignment.Left;aj.VerticalAlignment=Enum.VerticalAlignment.Top;aj.Padding=UDim.new(0,8)aj.SortOrder=Enum.SortOrder.LayoutOrder;local ak=Instance.new("Frame")ak.BackgroundTransparency=1;ak.AutomaticSize=Enum.AutomaticSize.Y;ak.Size=UDim2.new(1,0,0,0)ak.Parent=ah;local al=Instance.new("UIListLayout",ak)al.FillDirection=Enum.FillDirection.Horizontal;al.VerticalAlignment=Enum.VerticalAlignment.Center;al.Padding=UDim.new(0,8)local am=Instance.new("ImageLabel")am.BackgroundTransparency=1;am.Image="rbxassetid://136497541793809"am.Size=UDim2.fromOffset(28,28)am.Parent=ak;a9._logo=am;local an=Instance.new("TextLabel")an.BackgroundTransparency=1;an.Text="CERBERUS • Macros"an.Font=Enum.Font.GothamSemibold;an.TextSize=20;an.TextColor3=Color3.fromRGB(210,245,225)an.TextXAlignment=Enum.TextXAlignment.Left;an.AutomaticSize=Enum.AutomaticSize.Y;an.Size=UDim2.new(1,-36,0,0)an.Parent=ak;a9._title=an;local ao=Instance.new("TextLabel")ao.Name="Hotkeys"ao.BackgroundTransparency=1;ao.RichText=true;ao.Font=Enum.Font.Gotham;ao.TextSize=18;ao.TextColor3=Color3.fromRGB(235,245,240)ao.TextXAlignment=Enum.TextXAlignment.Left;ao.TextYAlignment=Enum.TextYAlignment.Top;ao.TextWrapped=true;ao.AutomaticSize=Enum.AutomaticSize.Y;ao.Size=UDim2.new(1,0,0,0)ao.Text="<b>Hotkeys</b>\nNone"ao.Parent=ah;a9._hot=ao;local ap=Instance.new("Frame")ap.BackgroundColor3=Color3.fromRGB(80,100,90)ap.BackgroundTransparency=0.70;ap.Size=UDim2.new(1,0,0,1)ap.Parent=ah;local aq=Instance.new("TextLabel")aq.Name="Looping"aq.BackgroundTransparency=1;aq.RichText=true;aq.Font=Enum.Font.Gotham;aq.TextSize=18;aq.TextColor3=Color3.fromRGB(235,245,240)aq.TextXAlignment=Enum.TextXAlignment.Left;aq.TextYAlignment=Enum.TextYAlignment.Top;aq.TextWrapped=true;aq.AutomaticSize=Enum.AutomaticSize.Y;aq.Size=UDim2.new(1,0,0,0)aq.Text="<b>Looping</b>\nNone"aq.Parent=ah;a9._loop=aq;af.InputBegan:Connect(function(ar)if ar.UserInputType==Enum.UserInputType.MouseButton1 or ar.UserInputType==Enum.UserInputType.Touch then a9._dragging,a9._dragStart,a9._startPos=true,ar.Position,af.Position;ar.Changed:Connect(function()if ar.UserInputState==Enum.UserInputState.End then a9._dragging=false end end)end end)af.InputChanged:Connect(function(ar)if a9._dragging and(ar.UserInputType==Enum.UserInputType.MouseMovement or ar.UserInputType==Enum.UserInputType.Touch)then local y=ar.Position-a9._dragStart;af.Position=UDim2.new(a9._startPos.X.Scale,a9._startPos.X.Offset+y.X,a9._startPos.Y.Scale,a9._startPos.Y.Offset+y.Y)end end)end;local function as(at,au,av)if at and au~=av then at.Text=au;return au end;return av end;local function aw()if not(a.Toggles and a.Toggles.MACRO_HUD and a.Toggles.MACRO_HUD.Value)then return end;ad()local function ax(L,M)local ay;if M.repeatRun then ay=M.running and"LOOP•ACTIVE"or"LOOP•IDLE"else ay=M.running and"RUN"or"READY"end;local az=M.running and"#5AFF8C"or"#DCEFE5"return string.format('<font color="%s">[%s] %s</font>',az,ay,L)end;local aA,aB={},{}for G,L in ipairs(j.order)do local M=j.list[L]if M then if M.hotkeyEnabled and M.hotkey then aA[#aA+1]=ax(L,M)end;if M.repeatRun then aB[#aB+1]=ax(L,M)end end end;local aC="<b>Hotkeys</b>\n"..(#aA>0 and table.concat(aA,"\n")or"None")local aD="<b>Looping</b>\n"..(#aB>0 and table.concat(aB,"\n")or"None")a9._lastHot=as(a9._hot,aC,a9._lastHot)a9._lastLoop=as(a9._loop,aD,a9._lastLoop)end;local aE,aF=0,0.12;local function aG()if j._hb then return end;j._hb=b.RunService.Heartbeat:Connect(function(aH)aE=aE+aH;if aE>=aF then aE=0;aw()end end)end;local aI=nil;local aJ;local function aK(H)if H.type=="KeyTap"then return("KeyTap(%s)"):format(H.key and H.key.Name or"?")end;if H.type=="KeyHold"then return("KeyHold(%s, %.0fms)"):format(H.key and H.key.Name or"?",(H.hold or 0)*1000)end;if H.type=="MouseClick"then return("MouseClick(%s, %.0fms)"):format(H.button or"Left",(H.hold or 0)*1000)end;if H.type=="Wait"then return("Wait(%.0fms)"):format((H.wait or 0)*1000)end;if H.type=="Teleport"then return("TP(%d,%d,%d @ %d/s)"):format(math.floor(H.pos.X),math.floor(H.pos.Y),math.floor(H.pos.Z),H.speed or 200)end;return"Step"end;local aL=g:AddDropdown("MACRO_Select",{Text="Select Macro",Values={},Default=nil})local function aM()table.sort(j.order,function(aN,aO)return tostring(aN)<tostring(aO)end)aL:SetValues(j.order)if aI and table.find(j.order,aI)then aL:SetValue(aI)elseif j.order[1]then aI=j.order[1]aL:SetValue(aI)else aI=nil;aL:SetValue(nil)end end;local function aP()local au="Steps: 0"if aI and j.list[aI]then local E=j.list[aI].steps or{}if#E>0 then local F=table.create(#E)for ar,H in ipairs(E)do F[ar]=("%d) %s"):format(ar,aK(H))end;au=table.concat(F,"\n")end end;if aJ and aJ.SetText then aJ:SetText(au,true)end end;local function aQ(L)if j.list[L]then return false end;j.list[L]={steps={},interval=1.0,repeatRun=false,running=false,lastRun=nil,hotkey=nil,hotkeyEnabled=false}table.insert(j.order,L)aI=L;aM()aP()J()return true end;local function aR(L)if not j.list[L]then return end;a2(L)j.list[L]=nil;for ar,Q in ipairs(j.order)do if Q==L then table.remove(j.order,ar)break end end;if aI==L then aI=nil end;aM()aP()J()end;local function aS(aT,aU)if not aT or not aU or aU==""or j.list[aU]then return d:Notify("Invalid or duplicate name.",3)end;local M=j.list[aT]if not M then return end;j.list[aU]=M;j.list[aT]=nil;for ar,Q in ipairs(j.order)do if Q==aT then j.order[ar]=aU;break end end;aI=aU;aM()J()aw()end;g:AddButton({Text="New Macro",Func=function()local aV,ar,aW="Macro",1,"Macro 1"while j.list[aW]do ar=ar+1;aW=("%s %d"):format(aV,ar)end;aQ(aW)d:Notify("Created: "..aW,2)end})g:AddButton({Text="Delete Macro",Func=function()if not aI then return end;aR(aI)d:Notify("Deleted macro.",2)end})g:AddInput("MACRO_Rename",{Text="Rename Selected",Placeholder="Enter new name",Numeric=false,Finished=true,Callback=function(aX)if aI and aX and aX~=""then aS(aI,aX)end end})aL:OnChanged(function(A)aI=A;aP()local M=aI and j.list[aI]if M then k.changingRepeat=true;a.Toggles.MACRO_Repeat:SetValue(M.repeatRun)k.changingRepeat=false;a.Options.MACRO_Interval:SetValue(M.interval)end end)g:AddDivider()local aY={"W","A","S","D","Space","LeftShift","LeftControl","E","F","G","Q","R","C","V","One","Two","Three","Four","Five","Six","Seven","Eight","Nine","Zero","T","Y","Z","X","B","H","J","K","L","Tab","Backquote"}local aZ=g:AddDropdown("MACRO_Key",{Text="Key",Values=aY,Default="E"})g:AddSlider("MACRO_Hold",{Text="Hold (ms)",Default=80,Min=10,Max=2000,Rounding=0})local a_=g:AddDropdown("MACRO_Mouse",{Text="Mouse Button",Values={"Left","Right","Middle"},Default="Left"})g:AddSlider("MACRO_Wait",{Text="Wait (ms)",Default=150,Min=10,Max=3000,Rounding=0})g:AddSlider("MACRO_MoveSpeed",{Text="Teleport Speed (stud/s)",Default=200,Min=50,Max=1000,Rounding=0})local function b0(H)if not aI then return end;local M=j.list[aI]if not M then return end;table.insert(M.steps,H)aP()J()end;g:AddButton({Text="Add Key Tap",Func=function()b0({type="KeyTap",key=l(aZ.Value)})end})g:AddButton({Text="Add Key Hold",Func=function()b0({type="KeyHold",key=l(aZ.Value),hold=(a.Options.MACRO_Hold.Value or 80)/1000})end})g:AddButton({Text="Add Mouse Click",Func=function()b0({type="MouseClick",button=a_.Value,hold=(a.Options.MACRO_Hold.Value or 80)/1000})end})g:AddButton({Text="Add Wait",Func=function()b0({type="Wait",wait=(a.Options.MACRO_Wait.Value or 150)/1000})end})g:AddButton({Text="Add Teleport",Tooltip="Will teleport you to your current coords",Func=function()local Z=e.humanoidRootPart;if not Z then return d:Notify("No character.",3)end;b0({type="Teleport",pos=Z.Position,speed=a.Options.MACRO_MoveSpeed.Value})end})g:AddButton({Text="Clear Steps",Func=function()if not aI then return end;d:Notify("Macro cleared",3)local M=j.list[aI]if not M then return end;M.steps={}aP()J()end})if not aJ then aJ=g:AddLabel("Steps: 0",true)end;aP()g:AddDivider()local b1=g:AddToggle("MACRO_Repeat",{Text="Loop Macro",Default=false})g:AddSlider("MACRO_Interval",{Text="Loop Interval (s)",Default=1.00,Min=0.10,Max=200.00,Rounding=1})local b2=g:AddToggle("MACRO_HotkeyToggle",{Text="Macro Hotkey",Default=false}):AddKeyPicker("MACRO_Hotkey",{Default="",SyncToggleState=false,Mode="Toggle",Text="Macro Hotkey"})a.Options.MACRO_Hotkey:OnChanged(function()if not aI then return end;local M=j.list[aI]if not M then return end;M.hotkey=l(a.Options.MACRO_Hotkey.Value)a5()J()end)a.Toggles.MACRO_HotkeyToggle:OnChanged(function()if not aI then return end;local M=j.list[aI]if not M then return end;if a.Toggles.MACRO_HotkeyToggle.Value and not M.hotkey then d:Notify("Please set a Macro Hotkey key first.",3)a.Toggles.MACRO_HotkeyToggle:SetValue(false)return end;M.hotkeyEnabled=a.Toggles.MACRO_HotkeyToggle.Value;J()end)b1:OnChanged(function()if k.changingRepeat then return end;if not aI then return end;local M=j.list[aI]if not M then return end;local b3=a.Toggles.MACRO_Repeat.Value;if b3 then M.repeatRun=true;if not M._loopThread then a3(aI,false)end else M.repeatRun=false end end)a.Options.MACRO_Interval:OnChanged(function()if not aI then return end;local M=j.list[aI]if not M then return end;M.interval=a.Options.MACRO_Interval.Value;J()end)g:AddButton({Text="Play Once",Func=function()if not aI then d:Notify("Select or create a macro first.",3)return end;a3(aI,true)end})g:AddDivider()g:AddToggle("MACRO_HUD",{Text="Show Macro HUD",Default=false,Callback=function(b4)if b4 then ad()aG()else ac()if j._hb then j._hb:Disconnect()j._hb=nil end end end})g:AddSlider("MACRO_HUD_Scale",{Text="HUD Scale",Default=120,Min=70,Max=180,Rounding=0,Suffix="%",Callback=function(A)local m=(A or 120)/100;if a9.holder then a9.holder.Size=UDim2.fromOffset(360*m,10)if a9._title then a9._title.TextSize=20*m end;if a9._hot then a9._hot.TextSize=18*m end;if a9._loop then a9._loop.TextSize=18*m end;if a9._logo then a9._logo.Size=UDim2.fromOffset(28*m,28*m)end end end})O()if#j.order==0 then aQ("Macro 1")end;aM()aP()a5()local b5={}function b5.Unload()for L,M in pairs(j.list)do M.repeatRun=false end;if j._hotkeyConn then pcall(function()j._hotkeyConn:Disconnect()end)j._hotkeyConn=nil end;if j._hb then pcall(function()j._hb:Disconnect()end)j._hb=nil end;pcall(ac)for G,M in pairs(j.list)do M.running=false;M._loopThread=nil end end;b5.Macros=j;b5.destroyHud=ac;return b5 end
