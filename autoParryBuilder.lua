local a=loadstring(game:HttpGet('https://sirius.menu/rayfield'))()local b={CerberusHubDark={TextColor=Color3.fromRGB(230,230,255),Background=Color3.fromRGB(15,15,30),Topbar=Color3.fromRGB(20,20,35),Shadow=Color3.fromRGB(10,10,20),NotificationBackground=Color3.fromRGB(25,25,35),NotificationActionsBackground=Color3.fromRGB(40,40,50),TabBackground=Color3.fromRGB(25,25,40),TabStroke=Color3.fromRGB(30,30,50),TabBackgroundSelected=Color3.fromRGB(60,60,90),TabTextColor=Color3.fromRGB(200,200,255),SelectedTabTextColor=Color3.fromRGB(255,255,255),ElementBackground=Color3.fromRGB(20,20,35),ElementBackgroundHover=Color3.fromRGB(25,25,40),SecondaryElementBackground=Color3.fromRGB(18,18,30),ElementStroke=Color3.fromRGB(30,30,50),SecondaryElementStroke=Color3.fromRGB(25,25,45),SliderBackground=Color3.fromRGB(80,120,255),SliderProgress=Color3.fromRGB(100,140,255),SliderStroke=Color3.fromRGB(120,160,255),ToggleBackground=Color3.fromRGB(20,20,30),ToggleEnabled=Color3.fromRGB(80,120,255),ToggleDisabled=Color3.fromRGB(70,70,70),ToggleEnabledStroke=Color3.fromRGB(100,140,255),ToggleDisabledStroke=Color3.fromRGB(90,90,90),ToggleEnabledOuterStroke=Color3.fromRGB(120,160,255),ToggleDisabledOuterStroke=Color3.fromRGB(60,60,60),DropdownSelected=Color3.fromRGB(30,30,50),DropdownUnselected=Color3.fromRGB(25,25,40),InputBackground=Color3.fromRGB(22,22,35),InputStroke=Color3.fromRGB(40,40,60),PlaceholderColor=Color3.fromRGB(150,150,180)},CerberusWave={TextColor=Color3.fromRGB(230,255,255),Background=Color3.fromRGB(18,25,35),Topbar=Color3.fromRGB(25,35,45),Shadow=Color3.fromRGB(10,15,20),NotificationBackground=Color3.fromRGB(20,30,40),NotificationActionsBackground=Color3.fromRGB(40,60,70),TabBackground=Color3.fromRGB(35,45,55),TabStroke=Color3.fromRGB(45,60,70),TabBackgroundSelected=Color3.fromRGB(0,170,200),TabTextColor=Color3.fromRGB(180,220,240),SelectedTabTextColor=Color3.fromRGB(255,255,255),ElementBackground=Color3.fromRGB(30,40,50),ElementBackgroundHover=Color3.fromRGB(40,50,60),SecondaryElementBackground=Color3.fromRGB(25,35,45),ElementStroke=Color3.fromRGB(50,70,80),SecondaryElementStroke=Color3.fromRGB(40,60,70),SliderBackground=Color3.fromRGB(0,140,180),SliderProgress=Color3.fromRGB(0,180,220),SliderStroke=Color3.fromRGB(0,210,255),ToggleBackground=Color3.fromRGB(30,45,55),ToggleEnabled=Color3.fromRGB(0,180,255),ToggleDisabled=Color3.fromRGB(90,110,120),ToggleEnabledStroke=Color3.fromRGB(0,210,255),ToggleDisabledStroke=Color3.fromRGB(110,130,140),ToggleEnabledOuterStroke=Color3.fromRGB(60,90,100),ToggleDisabledOuterStroke=Color3.fromRGB(45,65,70),DropdownSelected=Color3.fromRGB(35,50,60),DropdownUnselected=Color3.fromRGB(30,40,50),InputBackground=Color3.fromRGB(30,45,55),InputStroke=Color3.fromRGB(60,80,90),PlaceholderColor=Color3.fromRGB(160,180,200)}}local c=a:CreateWindow({Name="AutoParry Builder | Cerberus",Theme="Default",LoadingTitle="Loading AutoParry Builder...",LoadingSubtitle="Cerberus by @tevilii",ConfigurationSaving={Enabled=false,FolderName="Cerberus",FileName="AutoParryBuilder"}})local d=c:CreateTab("AutoParry","swords")local e=c:CreateTab("Logging","film")local f=c:CreateTab("Config","file-cog")local g=c:CreateTab("Misc","ellipsis")local h=game:GetService("Players")local i=game:GetService("MarketplaceService")local j=game:GetService("HttpService")local k=game:GetService("UserInputService")local l=game:GetService("Workspace")local m=game:GetService("VirtualInputManager")local n=game:GetService("RunService")local o=game:GetService("Lighting")local p=game:GetService("TeleportService")local q=l.CurrentCamera;local r=h.LocalPlayer;local s=r.Character;local t=s and s:FindFirstChildOfClass("Humanoid")or nil;local u=s and(s:FindFirstChild("HumanoidRootPart")or s.PrimaryPart)or nil;local v=false;local w=20;local x=false;local y=false;local z=nil;local A=false;local B=nil;local C=false;local D=nil;local E=nil;local F={}local G={}local H="ignoredAnimationsMgn.json"local I={}local J="parryIdListMgn.txt"local K={}local function L(M)return isfile and isfile(M)or false end;local function N()if L(H)then local O=readfile(H)local P,Q=pcall(function()return j:JSONDecode(O)end)if P and typeof(Q)=="table"then for R,S in ipairs(Q)do if typeof(S)=="string"then G[S]=true end end end else if writefile then writefile(H,j:JSONEncode({}))end end end;local function T()if writefile then local U={}for S,R in pairs(G)do table.insert(U,S)end;writefile(H,j:JSONEncode(U))end end;N()local function V()if not L(J)then if writefile then writefile(J,"")end;return end;local O=readfile(J)for W in O:gmatch("[^\r\n]+")do local S=W:match("^(%d+)%s*-")if S then K[S]=true end end end;V()local function X(S,Y)if not A or K[S]then return end;K[S]=true;local W=S.." - "..Y.."\n"if appendfile then appendfile(J,W)elseif writefile and readfile then local Z=readfile(J)writefile(J,Z..W)end end;local _={}local function a0(S)if _[S]then return _[S]end;local a1=tonumber(S)if not a1 then _[S]="[Invalid ID]"return"[Invalid ID]"end;local a2,a3=pcall(function()return i:GetProductInfo(a1)end)local a4=a2 and type(a3)=="table"and a3.Name and a3.Name or"[Unknown]"_[S]=a4;return a4 end;e:CreateSection("Animation Logger")local a5=e:CreateToggle({Name="Enable Animation Logger",CurrentValue=false,Flag="AutoParry_LoggerToggle",Callback=function(a6)v=a6;if not v then for t,a7 in pairs(F)do a7:Disconnect()end;table.clear(F)else for R,a8 in ipairs(l:GetDescendants())do if a8:IsA("Humanoid")then logHookHumanoid(a8)end end end end})local a9=e:CreateSlider({Name="Listening Range",Range={0,100},Increment=1,Suffix="studs",CurrentValue=w,Flag="AutoParry_RangeSlider",Callback=function(a6)w=a6 end})e:CreateSection("Logging Modes")e:CreateParagraph({Title="Single Target Mode",Content="Enable this, then hold V and right-click a target to log only that target's animations (target will highlight when selected)."})local aa=e:CreateToggle({Name="Single Target Mode",CurrentValue=false,Flag="AutoParry_SingleTargetToggle",Callback=function(a6)x=a6;if not x then if E then E:Destroy()E=nil end;D=nil end end})e:CreateParagraph({Title="Single Animation Mode",Content="Logs will only show one specific animation ID (set below) when this is enabled."})local ab=e:CreateToggle({Name="Single Animation Mode",CurrentValue=false,Flag="AutoParry_SingleAnimationToggle",Callback=function(a6)y=a6;if not y then z=nil end end})local ac=e:CreateInput({Name="Single ID",CurrentValue="",PlaceholderText="Enter numeric ID to watch",RemoveTextAfterFocusLost=true,Flag="AutoParry_SingleAnimationInput",Callback=function(ad)local S=tostring(ad):match("%d+")if S and S~=""then z=S;a:Notify({Title="Single Animation Set",Content="Now only ID "..S.." will notify.",Duration=3})else a:Notify({Title="Invalid ID",Content="Please enter a numeric animation ID.",Duration=3})end end})e:CreateParagraph({Title="Save IDs",Content="When enabled, all unique IDs logged will be saved to 'parryIdListMgn.txt' in your workspace."})local ae=e:CreateToggle({Name="Save IDs",CurrentValue=false,Flag="AutoParry_LogParryIDsToggle",Callback=function(a6)A=a6;if A then if not L(J)and writefile then writefile(J,"")end;a:Notify({Title="Parry Logging Enabled",Content="Unique animation IDs will be appended to parryIdListMgn.txt.",Duration=3})else a:Notify({Title="Parry Logging Disabled",Content="Stopped logging animation IDs to file.",Duration=3})end end})e:CreateSection("Logging Utils")local af=e:CreateButton({Name="Copy Last ID",Callback=function()if B and setclipboard then setclipboard(B)a:Notify({Title="Copied to Clipboard",Content="Animation ID: "..B,Duration=3})else a:Notify({Title="Nothing to Copy",Content="No animation ID recorded yet.",Duration=3})end end})local ag=e:CreateInput({Name="Ignore ID",CurrentValue="",PlaceholderText="Paste numeric ID and press Enter",RemoveTextAfterFocusLost=true,Flag="AutoParry_IgnoreInput",Callback=function(ad)local S=tostring(ad):match("%d+")if S and S~=""then if not G[S]then G[S]=true;T()a:Notify({Title="Added to Ignore List",Content="Animation ID: "..S,Duration=3})else a:Notify({Title="Already Ignored",Content="Animation ID: "..S.." is already ignored.",Duration=3})end else a:Notify({Title="Invalid ID",Content="Please enter a numeric animation ID.",Duration=3})end end})local ah=e:CreateInput({Name="Query ID",CurrentValue="",PlaceholderText="Enter numeric ID to get name",RemoveTextAfterFocusLost=true,Flag="AutoParry_QueryInput",Callback=function(ad)local S=tostring(ad):match("%d+")if S and S~=""then local a4=a0(S)a:Notify({Title=a4~=""and a4 or"[No Name]",Content="ID: "..S,Duration=4})else a:Notify({Title="Invalid ID",Content="Please enter a numeric animation ID.",Duration=3})end end})local ai=e:CreateInput({Name="Simulate Animation",PlaceholderText="Enter animation ID",RemoveTextAfterFocusLost=true,Flag="AutoParry_SimulateAnimInput",Callback=function(ad)local S=tostring(ad):match("%d+")if not S or S==""then a:Notify({Title="Invalid Animation ID",Content="Please enter a numeric animation ID.",Duration=3})return end;local aj=r.Character;if not aj then return end;local ak=aj:FindFirstChildOfClass("Humanoid")if not ak then return end;local al=ak:FindFirstChildOfClass("Animator")if not al then al=Instance.new("Animator")al.Parent=ak end;local am=Instance.new("Animation")am.AnimationId="rbxassetid://"..S;local P,an=pcall(function()return al:LoadAnimation(am)end)if not P or not an then a:Notify({Title="Failed to Load Animation",Content="Animation may be invalid or blocked.",Duration=3})am:Destroy()return end;an:Play()a:Notify({Title="Playing Animation",Content="ID: "..S,Duration=2})task.delay(5,function()if an then an:Stop()am:Destroy()a:Notify({Title="Stopped Animation",Content="Animation stopped after 5 seconds.",Duration=2})end end)end})local function ao(ap)if E then E:Destroy()end;E=nil;if ap and ap:IsA("Model")then local aq=Instance.new("Highlight")aq.Adornee=ap;aq.Parent=ap;E=aq end end;local function ar()if not x then return end;local as=r:GetMouse()local at=as.Target;if not at then return end;local ap=at:FindFirstAncestorOfClass("Model")if not ap then return end;local ak=ap:FindFirstChildOfClass("Humanoid")if not ak then return end;D=ap;ao(ap)end;k.InputBegan:Connect(function(au,av)if av then return end;if au.KeyCode==Enum.KeyCode.V then C=true elseif au.UserInputType==Enum.UserInputType.MouseButton2 then if C then ar()end end end)k.InputEnded:Connect(function(au)if au.KeyCode==Enum.KeyCode.V then C=false end end)local function aw(Y,ax,ay)local az=tick()if I[ax]and az-I[ax]<0.5 then return false end;I[ax]=az;local aA=(Y==""or Y=="[Unknown]")and"[No Name]"or Y;local aB=string.format("[%s]\nID: %s",ay.Name or"Unknown",ax)a:Notify({Title=aA,Content=aB,Duration=4})return true end;local function aC(t)return t.AnimationPlayed:Connect(function(an)if not v then return end;local ay=t.Parent;if not ay then return end;if x and(not D or ay~=D)then return end;local aD=an.Animation and an.Animation.AnimationId or""local ax=tostring(aD):match("%d+")or""if ax==""then return end;if y and(not z or ax~=z)then return end;if G[ax]then return end;if ay==r.Character then return end;local aE=ay:FindFirstChild("HumanoidRootPart")or ay.PrimaryPart;if not aE then return end;local aF=r.Character;local aG=aF and(aF:FindFirstChild("HumanoidRootPart")or aF.PrimaryPart)or nil;if not aG then return end;if(aE.Position-aG.Position).Magnitude>w then return end;local Y=a0(ax)X(ax,Y)if aw(Y,ax,ay)then B=ax end end)end;function logHookHumanoid(t)if not v or F[t]then return end;local ap=t.Parent;if not ap or not ap:IsDescendantOf(l)then return end;F[t]=aC(t)end;function logUnhookHumanoid(t)local a7=F[t]if a7 then a7:Disconnect()F[t]=nil end end;l.DescendantAdded:Connect(function(aH)if aH:IsA("Humanoid")then task.wait(0.1)logHookHumanoid(aH)end end)l.DescendantRemoving:Connect(function(aH)if aH:IsA("Humanoid")then logUnhookHumanoid(aH)end end)for R,aI in ipairs(h:GetPlayers())do if aI.Character then local aJ=aI.Character:FindFirstChildOfClass("Humanoid")if aJ then logHookHumanoid(aJ)end end end;h.PlayerAdded:Connect(function(aI)aI.CharacterAdded:Connect(function(aj)local ak=aj:WaitForChild("Humanoid",5)if ak then logHookHumanoid(ak)end end)end)h.PlayerRemoving:Connect(function(aI)if aI.Character then local ak=aI.Character:FindFirstChildOfClass("Humanoid")if ak then logUnhookHumanoid(ak)end end end)local aK="ParryConfigMgn.json"local aL={}local aM={}local function aN()aM={}for aO,aP in pairs(aL)do for R,aQ in ipairs(aP)do if aQ.id and aQ.name and aQ.startTime and aQ.holdTime then aM[aQ.id]={name=aQ.name,startTime=aQ.startTime,holdTime=aQ.holdTime,absolute=aQ.absolute or false}end end end end;local function aR()if L(aK)then local O=readfile(aK)local P,Q=pcall(function()return j:JSONDecode(O)end)aL=P and typeof(Q)=="table"and Q or{}else aL={}if writefile then writefile(aK,j:JSONEncode(aL))end end;if not aL["Player"]then aL["Player"]={}end end;local function aS()if writefile then writefile(aK,j:JSONEncode(aL))end end;aR()local function aT(S)local aU="rbxassetid://"..S;for R,aV in ipairs(l:GetDescendants())do if aV:IsA("Animation")and aV.AnimationId==aU then return aV:FindFirstAncestorOfClass("Model")end end;return nil end;local function aW(aX)local aY={}local aZ=aL[aX]if type(aZ)=="table"then for R,aQ in ipairs(aZ)do aY[#aY+1]=string.format("%s - %s",aQ.id,aQ.name)end end;table.sort(aY,function(a_,b0)return a_:lower()<b0:lower()end)return aY end;local function b1()local b2={"Player"}for aO,R in pairs(aL)do if aO~="Player"then table.insert(b2,aO)end end;table.sort(b2,function(a_,b0)return a_:lower()<b0:lower()end)return b2 end;f:CreateSection("Animation Selector")f:CreateParagraph({Title="Animation Selector",Content="Select an entity and animation from your config to edit its parry timings."})local b3=b1()local b4=f:CreateDropdown({Name="Entity Type",Options=b3,CurrentOption={b3[1]or"Player"},MultipleOptions=false,Flag="Parry_EntityDropdown",Callback=function(R)end})local b5=b4.CurrentOption[1]local b6=f:CreateDropdown({Name="Entity Animations",Options=aW(b5),CurrentOption={},MultipleOptions=false,Flag="Parry_AnimDropdown",Callback=function(R)end})b4.Callback=function(b7)local b8=b7 and b7[1]or"Player"if type(b8)~="string"then b8="Player"end;local b9=aW(b8)b6:Refresh(b9)if b9[1]then b6:Set({b9[1]})else b6:Set({})end end;f:CreateSection("Config Editor")local ba=b4.CurrentOption[1]or"Player"local bb=nil;f:CreateParagraph({Title="Start and Hold Times",Content="Adjust these sliders then click Commit Changes to update parry timings in your config. Start Time is when the parry should begin (either a percentage of the animation or an absolute time if Absolute Mode is on). For example, 50% on a 1s animation triggers at 0.5s. Hold Time is how long to hold the parry (in seconds)."})local bc=f:CreateToggle({Name="Use Absolute Start Time",CurrentValue=false,Flag="Parry_AbsoluteModeToggle",Callback=function(a6)if a6 then a:Notify({Title="Absolute Mode Enabled",Content="Start Time will be set in milliseconds (ms).",Duration=3})else a:Notify({Title="Relative Mode Enabled",Content="Start Time will be set as a percentage (%).",Duration=3})end end})local bd=f:CreateSlider({Name="Start Time (%)",Range={0,100},Increment=1,Suffix="%",CurrentValue=0,Flag="Parry_StartTimeSlider",Callback=function(R)end})local be=f:CreateSlider({Name="Start Time (ms)",Range={0,3000},Increment=10,Suffix="ms",CurrentValue=0,Flag="Parry_StartTimeMsSlider",Callback=function(R)end})local bf=f:CreateSlider({Name="Hold Time (s)",Range={0.1,2},Increment=0.1,Suffix="s",CurrentValue=0.5,Flag="Parry_HoldTimeSlider",Callback=function(R)end})f:CreateButton({Name="Commit Changes",Callback=function()if not ba or not bb then a:Notify({Title="No Animation Selected",Content="Please select an animation from the dropdown first.",Duration=3})return end;local bg=bc.CurrentValue;local bh=bg and be.CurrentValue/1000 or bd.CurrentValue;local bi=bf.CurrentValue;local aZ=aL[ba]if type(aZ)~="table"then a:Notify({Title="Error",Content="Could not find category in config.",Duration=3})return end;for R,aQ in ipairs(aZ)do if aQ.id==bb then aQ.startTime=bh;aQ.holdTime=bi;aQ.absolute=bg;aS()local bj;if bg then bj=string.format("Start Time = %.0fms\nHold Time = %.1fs",bh*1000,bi)else bj=string.format("Start Time = %d%%\nHold Time = %.1fs",bh,bi)end;a:Notify({Title="Times Updated",Content=string.format("Animation %s:\n%s",bb,bj),Duration=3})return end end;a:Notify({Title="Not Found",Content="Animation ID not found in the current category.",Duration=3})end})b6.Callback=function(b7)local bk=b7 and b7[1]if type(bk)~="string"then bb=nil;ba=b4.CurrentOption[1]or"Player"return end;local S=bk:match("^(%d+)%s*-")if not S then bb=nil;ba=b4.CurrentOption[1]or"Player"return end;bb=S;ba=b4.CurrentOption[1]or"Player"local aZ=aL[ba]or{}for R,aQ in ipairs(aZ)do if aQ.id==S then local bl=aQ.absolute or false;bc:Set(bl)if bl then bd:Set(0)be:Set(math.floor((aQ.startTime or 0)*1000+0.5))else bd:Set(aQ.startTime or 0)be:Set(0)end;bf:Set(aQ.holdTime or 0.5)return end end;a:Notify({Title="Not Found",Content="Animation entry not found in config.",Duration=3})end;f:CreateParagraph({Title="Insert Animation ID",Content="Insert a new animation ID to add it to your config with default timings. After adding, refresh the config and adjust timings as needed."})f:CreateInput({Name="Insert Animation ID",CurrentValue="",PlaceholderText="Enter numeric animation ID and press Enter",RemoveTextAfterFocusLost=true,Flag="Parry_AnimIdInput",Callback=function(ad)local S=tostring(ad):match("%d+")if not S or S==""then a:Notify({Title="Invalid ID",Content="Please enter a valid numeric animation ID.",Duration=3})return end;local ap=aT(S)local b8;if ap then local bm=h:GetPlayerFromCharacter(ap)b8=bm and"Player"or ap.Name else b8="Player"end;if not aL[b8]then aL[b8]={}end;for R,aQ in ipairs(aL[b8])do if aQ.id==S then a:Notify({Title="Duplicate ID",Content=string.format("Animation ID %s already exists under \"%s\".",S,b8),Duration=3})return end end;local Y=a0(S)local bn={id=S,name=Y,startTime=0,holdTime=0.45,absolute=false}table.insert(aL[b8],bn)aS()local bo=b1()b4:Refresh(bo)if table.find(bo,b8)then b4:Set({b8})else b4:Set({bo[1]or"Player"})end;if b4.CurrentOption[1]==b8 then local bp=aW(b8)b6:Refresh(bp)if#bp>0 then b6:Set({bp[1]})else b6:Set({})end end;a:Notify({Title="Added Animation",Content=string.format("Entity: %s\nID: %s\nName: %s",b8,S,Y),Duration=4})end})f:CreateParagraph({Title="Refresh Config",Content="Reload the config file and update the UI. Use this after editing the config file manually or adding new entries."})f:CreateButton({Name="Refresh Config",Callback=function()aR()aN()local bq=b1()b4:Refresh(bq)if#bq>0 then b4:Set({bq[1]})end;local br=b4.CurrentOption[1]or"Player"local b9=aW(br)b6:Refresh(b9)if#b9>0 then b6:Set({b9[1]})else b6:Set({})end;ba=b4.CurrentOption[1]or"Player"bb=nil;bd:Set(0)be:Set(0)bf:Set(0.5)a:Notify({Title="Config Refreshed",Content="Reloaded ParryConfigMgn.json and updated dropdowns/sliders.",Duration=3})end})f:CreateButton({Name="Print Config to Output",Callback=function()print("===== Parry Config =====")for aO,aP in pairs(aL)do print(string.format("Entity: %s",aO))for R,aQ in ipairs(aP)do local bs=aQ.absolute and string.format("%.2fs",aQ.startTime)or string.format("%d%%",aQ.startTime)print(string.format("   • ID: %-12s Name: %-25s StartTime: %-6s HoldTime: %.1fs",aQ.id,aQ.name,bs,aQ.holdTime))end;print("-----------------------------")end;print("===== End Config =====")a:Notify({Title="Config Printed",Content="ParryConfig has been printed to the developer console (F9).",Duration=3})end})d:CreateParagraph({Title="Auto Parry Config Builder",Content="Auto Parry listens for nearby attack animations (from mobs or players) and automatically performs a parry/block at the configured time. Use the Logger to find attack animation IDs and timing, the Config Editor to adjust timings, and the debugging options to test your settings. The config file is ParryConfigMgn.json in your workspace. Feel free to share configs with the community!"})aN()local bt=false;local bu=10;local bv={}local bw=true;local bx=true;local by=false;local bz=0;local bA=100;local bB=nil;local bC=false;local bD=nil;local function bE(t)local ap=t.Parent;if not ap then return false end;if ap==r.Character then return false end;local u=ap:FindFirstChild("HumanoidRootPart")or ap.PrimaryPart;local aF=r.Character;local bF=aF and(aF:FindFirstChild("HumanoidRootPart")or aF.PrimaryPart)or nil;if not u or not bF then return false end;return(u.Position-bF.Position).Magnitude<=bu end;local function bG()if bB then return end;bB=task.spawn(function()while true do if r and r:GetNetworkPing()then bz=math.floor(r:GetNetworkPing()*1000)else bz=0 end;task.wait(5)end end)end;bG()local function bH(t)return t.AnimationPlayed:Connect(function(an)if not bt then return end;if not bE(t)then return end;local ap=t.Parent;if ap then local bI=h:GetPlayerFromCharacter(ap)if bI then if not bw then return end else if not bx then return end end end;local aD=an.Animation and an.Animation.AnimationId or""local S=tostring(aD):match("%d+")or""if S==""then return end;local bJ=aM[S]if not bJ then return end;local bK=an.Length or an.TimeLength or 0;if bK<=0 then return end;local bL;if bJ.absolute then bL=bJ.startTime else bL=bJ.startTime/100*bK end;local bM=0;if by then bM=bz/1000*bA/100 end;local bN=bL-bM;if bN<0 then bN=0 end;task.spawn(function()task.wait(bN)if not bt then return end;local bO=bN+bz/1000;local bP=0;if bK>0 then bP=bO/bK*100;if bP>100 then bP=100 end;if bP<0 then bP=0 end end;if bC then local bQ=tostring(bz).." ms"local bR=bJ.absolute and string.format("%.0fms",bJ.startTime*1000)or tostring(bJ.startTime).."%"a:Notify({Title=string.format("Parry Debug: %s",bJ.name or"[Unknown]"),Content=string.format("ID: %s\nStart: %s\nHold: %.1fs\nPing: %s\nActual Parry: %.1f%%",S,bR,bJ.holdTime,bQ,bP),Duration=5})end;bD=S;local bS=r.Character and r.Character:WaitForChild("CharacterHandler",1)local bT=bS and bS:FindFirstChild("Remotes")local bU=bT and bT:FindFirstChild("Block")if bU then bU:FireServer("Pressed")task.wait(bJ.holdTime)bU:FireServer("Released")else m:SendKeyEvent(true,Enum.KeyCode.F,false,nil)task.wait(bJ.holdTime)m:SendKeyEvent(false,Enum.KeyCode.F,false,nil)end end)end)end;local function bV(t)if bv[t]then return end;bv[t]=bH(t)end;local function bW(t)local a7=bv[t]if a7 then a7:Disconnect()bv[t]=nil end end;for R,aV in ipairs(l:GetDescendants())do if aV:IsA("Humanoid")then bV(aV)end end;l.DescendantAdded:Connect(function(a8)if a8:IsA("Humanoid")then task.delay(0.05,function()if a8.Parent and a8:IsDescendantOf(l)then bV(a8)end end)end end)l.DescendantRemoving:Connect(function(a8)if a8:IsA("Humanoid")then bW(a8)end end)d:CreateSection("Auto Parry")local bX=d:CreateToggle({Name="Enable Auto Parry",CurrentValue=false,Flag="AutoParry_EnableToggle",Callback=function(bY)bt=bY;if bY then a:Notify({Title="Auto Parry Enabled",Content="Listening for configured attack animations...",Duration=2})else a:Notify({Title="Auto Parry Disabled",Content="Auto parry is now off.",Duration=2})end end})local bZ=d:CreateSlider({Name="Parry Range",Range={0,50},Increment=1,Suffix="studs",CurrentValue=bu,Flag="AutoParry_RangeSlider",Callback=function(a6)bu=a6 end})d:CreateSection("Target Filtering")local b_=d:CreateToggle({Name="Parry Player Attacks",CurrentValue=true,Flag="AutoParry_ParryPlayers",Callback=function(a6)bw=a6 end})local c0=d:CreateToggle({Name="Parry NPC Attacks",CurrentValue=true,Flag="AutoParry_ParryNPCs",Callback=function(a6)bx=a6 end})d:CreateSection("Ping Compensation")local c1=d:CreateToggle({Name="Enable Ping Compensation",CurrentValue=false,Flag="AutoParry_PingCompToggle",Callback=function(bY)by=bY;if bY then a:Notify({Title="Ping Compensation Enabled",Content="Parry timing will subtract ping delay.",Duration=2})else a:Notify({Title="Ping Compensation Disabled",Content="No ping adjustment to parry timing.",Duration=2})end end})d:CreateParagraph({Title="Ping Compensation %",Content="Determines how much of your ping is compensated for in parry timing. E.g., at 50% and 200ms ping, 100ms is subtracted from the parry start time."})local c2=d:CreateSlider({Name="Ping Compensation %",Range={0,100},Increment=5,Suffix="%",CurrentValue=bA,Flag="AutoParry_PingPercentSlider",Callback=function(a6)bA=a6 end})d:CreateButton({Name="Show Current Ping",Callback=function()local c3="Ping unavailable"if r:GetNetworkPing()then c3=tostring(math.floor(r:GetNetworkPing()*1000)).." ms"elseif bz>0 then c3=tostring(bz).." ms"end;a:Notify({Title="Current Ping",Content=c3,Duration=3})end})d:CreateSection("Debugging")d:CreateParagraph({Title="Debugging Warning",Content="Debug mode can reduce performance. Use it only while tuning your config."})local c4=d:CreateToggle({Name="Config Debugging",CurrentValue=false,Flag="AutoParry_DebugToggle",Callback=function(bY)bC=bY;if bY then a:Notify({Title="Debugging On",Content="Parry debug info will be shown in notifications.",Duration=2})else a:Notify({Title="Debugging Off",Content="No debug notifications will be shown.",Duration=2})end end})d:CreateButton({Name="Copy Latest Parry Animation ID",Callback=function()if bD and setclipboard then setclipboard(bD)a:Notify({Title="Copied to Clipboard",Content="Parry ID: "..bD,Duration=2})else a:Notify({Title="Nothing to Copy",Content="No parry ID recorded yet.",Duration=2})end end})aN()g:CreateSection("Misc Utils")g:CreateParagraph({Title="Misc Utils",Content="Helpful utilities while configuring your parry settings."})local c5=false;local c6=100;local c7=nil;local c8=nil;local c9=false;local ca=nil;local function cb(aj)s=aj;t=aj:WaitForChild("Humanoid")u=aj:WaitForChild("HumanoidRootPart")if c5 and u then t.PlatformStand=true;c7=u.Position.Y;c8=Instance.new("BodyGyro")c8.Name="FlightGyro"c8.P=20000;c8.D=1000;c8.MaxTorque=Vector3.new(1e5,1e5,1e5)c8.CFrame=u.CFrame;c8.Parent=u end;if c9 then if ca then ca:Disconnect()end;ca=n.Stepped:Connect(function()if s then for R,cc in ipairs(s:GetDescendants())do if cc:IsA("BasePart")then cc.CanCollide=false end end end end)end end;if r.Character then cb(r.Character)end;r.CharacterAdded:Connect(cb)local cd=g:CreateToggle({Name="Flight",Flag="Misc_FlightToggle",CurrentValue=false,Callback=function(ce)c5=ce;if t and u then if ce then t.PlatformStand=true;c7=u.Position.Y;c8=Instance.new("BodyGyro")c8.Name="FlightGyro"c8.P=20000;c8.D=1000;c8.MaxTorque=Vector3.new(1e5,1e5,1e5)c8.CFrame=u.CFrame;c8.Parent=u else t.PlatformStand=false;if c8 then c8:Destroy()c8=nil end;if u then u.Velocity=Vector3.new(0,0,0)end end end end})g:CreateKeybind({Name="Toggle Flight",Flag="Misc_FlightKeybind",CurrentKeybind="G",HoldToInteract=false,Callback=function()cd:Set(not c5)end})g:CreateSlider({Name="Flight Speed",Flag="Misc_FlightSpeed",Range={10,300},Increment=10,CurrentValue=c6,Callback=function(cf)c6=cf end})local cg={Forward=false,Backward=false,Left=false,Right=false,Up=false,Down=false}k.InputBegan:Connect(function(au,ch)if ch then return end;if au.UserInputType==Enum.UserInputType.Keyboard then local ci=au.KeyCode;if ci==Enum.KeyCode.W then cg.Forward=true elseif ci==Enum.KeyCode.S then cg.Backward=true elseif ci==Enum.KeyCode.A then cg.Left=true elseif ci==Enum.KeyCode.D then cg.Right=true elseif ci==Enum.KeyCode.Space then cg.Up=true elseif ci==Enum.KeyCode.LeftShift then cg.Down=true end end end)k.InputEnded:Connect(function(au,ch)if ch then return end;if au.UserInputType==Enum.UserInputType.Keyboard then local ci=au.KeyCode;if ci==Enum.KeyCode.W then cg.Forward=false elseif ci==Enum.KeyCode.S then cg.Backward=false elseif ci==Enum.KeyCode.A then cg.Left=false elseif ci==Enum.KeyCode.D then cg.Right=false elseif ci==Enum.KeyCode.Space then cg.Up=false elseif ci==Enum.KeyCode.LeftShift then cg.Down=false end end end)local function cj()if t and k.TouchEnabled then local ck=t.MoveDirection;if ck.Magnitude>0 then local cl=q.CFrame;local cm=Vector3.new(cl.LookVector.X,0,cl.LookVector.Z).Unit;local cn=Vector3.new(cl.RightVector.X,0,cl.RightVector.Z).Unit;return(cm*ck.Z+cn*ck.X).Unit end end;return Vector3.zero end;n.RenderStepped:Connect(function()if not c5 or not t or not u then return end;local co=Vector3.new(0,0,0)local cp=q.CFrame;if not k.TouchEnabled then if cg.Forward then co=co+cp.LookVector end;if cg.Backward then co=co-cp.LookVector end;if cg.Left then co=co-cp.RightVector end;if cg.Right then co=co+cp.RightVector end else co=cj()end;if cg.Up then co=co+Vector3.new(0,1,0)end;if cg.Down then co=co-Vector3.new(0,1,0)end;if c8 then c8.CFrame=CFrame.new(u.Position,u.Position+cp.LookVector)end;local cq;if co.Magnitude>0 then cq=co.Unit*c6;c7=u.Position.Y else local cr=c7 and c7-u.Position.Y or 0;cq=Vector3.new(0,cr*5,0)end;u.Velocity=cq end)local cs=false;local ct={}local function cu()ct.Brightness=o.Brightness;ct.GlobalShadows=o.GlobalShadows;ct.Ambient=o.Ambient end;local function cv(cw)cs=cw;if cw then cu()else if next(ct)then o.Brightness=ct.Brightness;o.GlobalShadows=ct.GlobalShadows;o.Ambient=ct.Ambient end end end;n.RenderStepped:Connect(function()if cs then o.Brightness=2;o.GlobalShadows=false;o.Ambient=Color3.new(1,1,1)end end)g:CreateToggle({Name="Fullbright",CurrentValue=false,Flag="Misc_FullbrightToggle",Callback=function(cf)cv(cf)end})local function cx(ce)if not s then return end;for R,cc in ipairs(s:GetDescendants())do if cc:IsA("BasePart")then cc.CanCollide=ce end end end;local function cy(bY)c9=bY;if bY then ca=n.Stepped:Connect(function()cx(false)end)else if ca then ca:Disconnect()ca=nil end;cx(true)end end;g:CreateToggle({Name="NoClip",CurrentValue=false,Flag="Misc_NoClipToggle",Callback=function(ce)cy(ce)end})g:CreateSlider({Name="FOV",Range={50,120},Increment=1,Suffix="°",CurrentValue=l.CurrentCamera.FieldOfView,Callback=function(a6)l.CurrentCamera.FieldOfView=a6 end})g:CreateButton({Name="Reset",Callback=function()local aj=r.Character;local ak=aj and aj:FindFirstChildOfClass("Humanoid")if ak then ak.Health=0 end end})local cz=game.PlaceId;local cA=game.JobId;g:CreateSection("Server Panel")g:CreateButton({Name="Rejoin Server",Callback=function()p:TeleportToPlaceInstance(cz,cA,r)end})g:CreateButton({Name="Join Random Server",Callback=function()local P,cB=pcall(function()return j:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..cz.."/servers/Public?sortOrder=Asc&limit=100"))end)if P and cB and cB.data then for R,cC in ipairs(cB.data)do if cC.playing<cC.maxPlayers and cC.id~=cA then p:TeleportToPlaceInstance(cz,cC.id,r)return end end end;a:Notify({Title="Server Join Failed",Content="Couldn't find a different server.",Duration=5,Image="rbxassetid://6764432296"})end})g:CreateButton({Name="Join Lowest Server",Callback=function()local P,cB=pcall(function()return j:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..cz.."/servers/Public?sortOrder=Asc&limit=100"))end)if P and cB and cB.data then for R,cC in ipairs(cB.data)do if cC.playing<cC.maxPlayers and cC.id~=cA then p:TeleportToPlaceInstance(cz,cC.id,r)return end end end;a:Notify({Title="Server Join Failed",Content="No suitable server found with fewer players.",Duration=5,Image="rbxassetid://6764432296"})end})g:CreateButton({Name="Copy Join Script",Callback=function()local cD=string.format("game:GetService('TeleportService'):TeleportToPlaceInstance(%d, '%s', game.Players.LocalPlayer)\n",cz,cA)if setclipboard then setclipboard(cD)a:Notify({Title="Copied!",Content="Join script copied to clipboard. Use it in an executor to rejoin this server.",Duration=4,Image="rbxassetid://6764432402"})else a:Notify({Title="Clipboard Error",Content="setclipboard() not available.",Duration=4,Image="rbxassetid://6764432296"})end end})
