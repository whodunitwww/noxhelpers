return function(a)local b,c,d,e,f,g=a.Tabs,a.Toggles,a.Options,a.Services,a.References,a.Dependencies;local h;local function i()if not h then local j,k=pcall(loadstring,g.senseSrc)if j and type(k)=="function"then local l,m=pcall(k)if l and type(m)=="table"then h=m end end end;if not h then return false end;if not h._hasLoaded and h.Load then pcall(h.Load)end;return true end;local function n()return c.PESP_Enable and c.PESP_Enable.Value end;local function o()return c.NPCESP_Enable and c.NPCESP_Enable.Value end;local function p()return c.FESP_Enable and c.FESP_Enable.Value end;local function q()return c.TESP_Enable and c.TESP_Enable.Value end;local function r()return n()or o()end;local function s()return r()or c.CRESP_Enable and c.CRESP_Enable.Value or c.RESP_Enable and c.RESP_Enable.Value or p()or q()end;local function t()if r()then return end;local u=h;if u and u._hasLoaded and u.Unload then pcall(u.Unload)end end;local v=b.ESP:AddLeftGroupbox("Universal","settings")v:AddSlider("ESP_TextSize",{Text="Text Size",Default=13,Min=10,Max=28,Rounding=0})v:AddDropdown("ESP_TracerOrigin",{Text="Tracer Origin",Values={"Bottom","Middle","Top"},Default="Bottom"})v:AddToggle("ESP_LimitRange",{Text="Limit Range",Default=false})v:AddSlider("ESP_MaxRange",{Text="Range (studs)",Default=150,Min=50,Max=2000,Rounding=0})local function w()if not r()then return end;if not i()then return end;local u=h;u.sharedSettings.textSize=d.ESP_TextSize.Value;u.sharedSettings.limitDistance=c.ESP_LimitRange.Value;u.sharedSettings.maxDistance=d.ESP_MaxRange.Value;local x=d.ESP_TracerOrigin.Value;u.teamSettings.enemy.tracerOrigin=x;u.teamSettings.friendly.tracerOrigin=x;u.instanceSettings.tracerOrigin=x end;d.ESP_TextSize:OnChanged(w)d.ESP_TracerOrigin:OnChanged(w)c.ESP_LimitRange:OnChanged(w)d.ESP_MaxRange:OnChanged(w)local y=b.ESP:AddRightGroupbox("Player ESP","users")y:AddToggle("PESP_Enable",{Text="Enable Player ESP",Default=false})y:AddDropdown("PESP_Side",{Text="Apply To",Values={"Enemy","Friendly","Both"},Default="Enemy"})y:AddToggle("PESP_Box",{Text="Boxes",Default=true}):AddColorPicker("PESP_BoxColor",{Default=Color3.fromRGB(255,60,60),Title="Box Color"})y:AddToggle("PESP_BoxOutline",{Text="Box Outline",Default=true})y:AddToggle("PESP_BoxFill",{Text="Box Fill",Default=false})y:AddSlider("PESP_BoxFillAlpha",{Text="Fill Alpha",Default=35,Min=0,Max=100,Rounding=0})y:AddToggle("PESP_Name",{Text="Names",Default=true}):AddColorPicker("PESP_NameColor",{Default=Color3.new(1,1,1),Title="Name Color"})y:AddToggle("PESP_Distance",{Text="Distance",Default=true}):AddColorPicker("PESP_DistColor",{Default=Color3.new(1,1,1),Title="Distance Color"})y:AddToggle("PESP_HealthBar",{Text="Health Bar",Default=true})y:AddToggle("PESP_Weapon",{Text="Weapon",Default=false})y:AddToggle("PESP_Tracer",{Text="Tracer",Default=true}):AddColorPicker("PESP_TracerColor",{Default=Color3.fromRGB(255,60,60),Title="Tracer Color"})y:AddToggle("PESP_Chams",{Text="Chams",Default=false})local function z()local A=d.PESP_Side.Value;if A=="Both"then return{"enemy","friendly"}end;return{A:lower()}end;local function B(C,D)local u=h;for E,F in ipairs(z())do u.teamSettings[F][C]=D end end;local function G(H,I)return{d[H].Value,I or 1}end;local function J()if not n()then return end;if not i()then return end;B("enabled",true)B("box",c.PESP_Box.Value)B("boxOutline",c.PESP_BoxOutline.Value)B("boxFill",c.PESP_BoxFill.Value)B("boxColor",G("PESP_BoxColor",1))B("boxOutlineColor",{Color3.new(),1})B("boxFillColor",{d.PESP_BoxColor.Value,(d.PESP_BoxFillAlpha.Value or 0)/100})B("name",c.PESP_Name.Value)B("nameColor",G("PESP_NameColor"))B("distance",c.PESP_Distance.Value)B("distanceColor",G("PESP_DistColor"))B("healthBar",c.PESP_HealthBar.Value)B("weapon",c.PESP_Weapon.Value)B("tracer",c.PESP_Tracer.Value)B("tracerColor",G("PESP_TracerColor"))B("tracerOutline",true)B("chams",c.PESP_Chams.Value)w()end;c.PESP_Enable:OnChanged(function()if c.PESP_Enable.Value then if i()then local K=d.PESP_Side.Value;h.teamSettings.enemy.enabled=K=="Enemy"or K=="Both"h.teamSettings.friendly.enabled=K=="Friendly"or K=="Both"J()end else if h then h.teamSettings.enemy.enabled=false;h.teamSettings.friendly.enabled=false end;t()end end)for E,L in ipairs({"PESP_Side","PESP_Box","PESP_BoxOutline","PESP_BoxFill","PESP_Name","PESP_Distance","PESP_HealthBar","PESP_Weapon","PESP_Tracer","PESP_Chams"})do(c[L]or d[L]):OnChanged(J)end;d.PESP_BoxColor:OnChanged(J)d.PESP_BoxFillAlpha:OnChanged(J)d.PESP_NameColor:OnChanged(J)d.PESP_DistColor:OnChanged(J)d.PESP_TracerColor:OnChanged(J)local M=b.ESP:AddLeftGroupbox("NPC ESP","user-cog")M:AddToggle("NPCESP_Enable",{Text="Enable NPC ESP",Default=false})M:AddToggle("NPCESP_Box",{Text="Boxes",Default=true}):AddColorPicker("NPCESP_BoxColor",{Default=Color3.fromRGB(255,255,0),Title="Box Color"})M:AddToggle("NPCESP_BoxOutline",{Text="Box Outline",Default=true})M:AddToggle("NPCESP_BoxFill",{Text="Box Fill",Default=false})M:AddSlider("NPCESP_BoxFillAlpha",{Text="Fill Alpha",Default=25,Min=0,Max=100,Rounding=0})M:AddToggle("NPCESP_Name",{Text="Names",Default=true}):AddColorPicker("NPCESP_NameColor",{Default=Color3.new(1,1,1),Title="Name Color"})M:AddToggle("NPCESP_Distance",{Text="Distance",Default=true}):AddColorPicker("NPCESP_DistColor",{Default=Color3.new(1,1,1),Title="Distance Color"})M:AddToggle("NPCESP_HealthBar",{Text="Health Bar",Default=true})M:AddToggle("NPCESP_Tracer",{Text="Tracer",Default=false}):AddColorPicker("NPCESP_TracerColor",{Default=Color3.fromRGB(255,255,0),Title="Tracer Color"})local function N(u)if e.Players:GetPlayerFromCharacter(u)then return true end;for E,O in ipairs(e.Players:GetPlayers())do if u.Name==O.Name or u.Name==O.DisplayName then return true end end;return false end;local function P()return e.Workspace end;local Q,R;local function S()if not h then return end;local T=P()if not T then return end;for E,U in ipairs(T:GetChildren())do if U:IsA("Model")and U:FindFirstChildOfClass("Humanoid")and not N(U)then h.RemoveInstance(U)end end end;local function V()if not i()then return end;local T=P()if not T then return end;local W={}for E,U in ipairs(T:GetChildren())do if U:IsA("Model")and U:FindFirstChildOfClass("Humanoid")and not N(U)then W[#W+1]=U end end;if#W>0 then h.AddInstances(W)end end;local function X(Y)local T=P()if not T then return end;if Y then if not Q then Q=T.ChildAdded:Connect(function(Z)if Z:IsA("Model")and Z:FindFirstChildOfClass("Humanoid")and not N(Z)then if o()and i()then h.AddInstances({Z})end end end)end;if not R then R=T.ChildRemoved:Connect(function(Z)if Z:IsA("Model")and h then h.RemoveInstance(Z)end end)end;V()else if Q then Q:Disconnect()Q=nil end;if R then R:Disconnect()R=nil end;S()end end;local function _()if not o()then return end;if not i()then return end;local a0=h.instanceSettings;a0.enabled=true;a0.box=c.NPCESP_Box.Value;a0.boxOutline=c.NPCESP_BoxOutline.Value;a0.boxFill=c.NPCESP_BoxFill.Value;a0.boxColor={d.NPCESP_BoxColor.Value,1}a0.boxOutlineColor={Color3.new(),1}a0.boxFillColor={d.NPCESP_BoxColor.Value,(d.NPCESP_BoxFillAlpha.Value or 0)/100}a0.name=c.NPCESP_Name.Value;a0.nameColor={d.NPCESP_NameColor.Value,1}a0.distance=c.NPCESP_Distance.Value;a0.distanceColor={d.NPCESP_DistColor.Value,1}a0.tracer=c.NPCESP_Tracer.Value;a0.tracerColor={d.NPCESP_TracerColor.Value,1}a0.healthBar=c.NPCESP_HealthBar.Value;w()end;c.NPCESP_Enable:OnChanged(function()if c.NPCESP_Enable.Value then if i()then h.instanceSettings.enabled=true;_()X(true)end else X(false)if h then h.instanceSettings.enabled=false end;t()end end)for E,L in ipairs({"NPCESP_Box","NPCESP_BoxOutline","NPCESP_BoxFill","NPCESP_Name","NPCESP_Distance","NPCESP_Tracer","NPCESP_HealthBar"})do(c[L]or d[L]):OnChanged(_)end;d.NPCESP_BoxColor:OnChanged(_)d.NPCESP_BoxFillAlpha:OnChanged(_)d.NPCESP_NameColor:OnChanged(_)d.NPCESP_DistColor:OnChanged(_)d.NPCESP_TracerColor:OnChanged(_)w()local function a1()return e.Workspace:FindFirstChild("Crates")end;local a2,a3,a4,a5={},nil,nil,nil;local a6=b.ESP:AddRightGroupbox("Crates ESP","box")a6:AddToggle("CRESP_Enable",{Text="Enable Crates ESP",Default=false})a6:AddToggle("CRESP_Box",{Text="Box",Default=true}):AddColorPicker("CRESP_BoxColor",{Default=Color3.fromRGB(0,200,255),Title="Box Color"})a6:AddToggle("CRESP_Name",{Text="Name",Default=true}):AddColorPicker("CRESP_NameColor",{Default=Color3.new(1,1,1),Title="Name Color"})a6:AddToggle("CRESP_Distance",{Text="Distance",Default=true}):AddColorPicker("CRESP_DistColor",{Default=Color3.new(1,1,1),Title="Distance Color"})a6:AddToggle("CRESP_Tracer",{Text="Tracer",Default=false})local function a7(Z)local x=a2[Z]if not x then return end;pcall(function()if x.box then x.box:Destroy()end end)pcall(function()if x.gui then x.gui:Destroy()end end)pcall(function()if x.tracer then x.tracer:Remove()end end)a2[Z]=nil end;local function a8()local a9=Drawing and Drawing.new and Drawing.new("Line")if not a9 then return nil end;a9.Thickness=1.5;a9.Transparency=1;a9.Visible=true;return a9 end;local function aa(ab)if a2[ab]then return end;local x={}if c.CRESP_Box.Value then local ac=Instance.new("BoxHandleAdornment")ac.Name="CerberusCrateBox"ac.Adornee=ab;ac.AlwaysOnTop=true;ac.Size=ab.Size or Vector3.new(4,4,4)ac.ZIndex=10;ac.Color3=d.CRESP_BoxColor.Value;ac.Transparency=0.2;ac.Parent=ab;x.box=ac end;local ad=Instance.new("BillboardGui")ad.Name="CerberusCrateBB"ad.Adornee=ab;ad.AlwaysOnTop=true;ad.Size=UDim2.new(0,200,0,42)ad.StudsOffset=Vector3.new(0,(ab.Size and ab.Size.Y or 4)*0.6+1,0)ad.Parent=ab;x.gui=ad;local ae=Instance.new("TextLabel")ae.BackgroundTransparency=1;ae.Size=UDim2.new(1,0,0,20)ae.Font=Enum.Font.GothamSemibold;ae.TextScaled=true;ae.TextColor3=d.CRESP_NameColor.Value;ae.Text="Crate"ae.Visible=c.CRESP_Name.Value;ae.Parent=ad;x.nameLbl=ae;local af=Instance.new("TextLabel")af.BackgroundTransparency=1;af.Position=UDim2.new(0,0,0,20)af.Size=UDim2.new(1,0,0,20)af.Font=Enum.Font.Gotham;af.TextScaled=true;af.TextColor3=d.CRESP_DistColor.Value;af.Text=""af.Visible=c.CRESP_Distance.Value;af.Parent=ad;x.distLbl=af;if c.CRESP_Tracer.Value then x.tracer=a8()end;a2[ab]=x end;local function ag(ah,ai)local aj=ah.ViewportSize;if ai=="Top"then return 0 end;if ai=="Middle"then return aj.Y/2 end;return aj.Y end;local function ak(al)if not c.ESP_LimitRange or not c.ESP_LimitRange.Value then return true end;local am=f.humanoidRootPart;if not am then return true end;local an=(am.Position-al).Magnitude;return an<=(d.ESP_MaxRange.Value or 150)end;local function ao()if not a2 or not f.camera then return end;local ah=f.camera;local aj=ah.ViewportSize;local ai=d.ESP_TracerOrigin and d.ESP_TracerOrigin.Value or"Bottom"local ap=ag(ah,ai)local aq=d.CRESP_BoxColor and d.CRESP_BoxColor.Value or Color3.new(1,1,1)local ar=d.CRESP_NameColor and d.CRESP_NameColor.Value or Color3.new(1,1,1)local as=d.CRESP_DistColor and d.CRESP_DistColor.Value or Color3.new(1,1,1)local at=c.CRESP_Tracer and c.CRESP_Tracer.Value or false;local am=f.humanoidRootPart;for U,x in pairs(a2)do repeat if typeof(U)~="Instance"or not U.Parent then a7(U)break end;local au,al=pcall(function()return U.Position end)if not au or typeof(al)~="Vector3"then a7(U)break end;local av=ak(al)if x.distLbl and am then local an=(am.Position-al).Magnitude;local aw=math.floor(an+0.5)pcall(function()x.distLbl.Text=("%d studs"):format(aw)x.distLbl.TextColor3=as;x.distLbl.Visible=c.CRESP_Distance.Value and av end)end;if x.box then pcall(function()x.box.Color3=aq;x.box.Visible=c.CRESP_Box.Value and av end)end;if x.nameLbl then pcall(function()x.nameLbl.TextColor3=ar;x.nameLbl.Visible=c.CRESP_Name.Value and av end)end;if x.tracer then local ax,ay=ah:WorldToViewportPoint(al)local az=at and ay and av;pcall(function()if x.tracer.Visible~=nil then x.tracer.Visible=az end;if az then x.tracer.From=Vector2.new(aj.X/2,ap)x.tracer.To=Vector2.new(ax.X,ax.Y)end end)end until true end end;local function aA()for U in pairs(a2)do a7(U)end;local aB=a1()if not aB then return end;for E,A in ipairs(aB:GetChildren())do if A:IsA("BasePart")or A:IsA("MeshPart")then aa(A)end end end;local function aC(Y)if Y then local aB=a1()if not aB then return end;if not a3 then a3=aB.ChildAdded:Connect(function(Z)if(Z:IsA("BasePart")or Z:IsA("MeshPart"))and c.CRESP_Enable.Value then aa(Z)end end)end;if not a4 then a4=aB.ChildRemoved:Connect(function(Z)a7(Z)end)end;if not a5 then a5=e.RunService.RenderStepped:Connect(ao)end;aA()else if a3 then a3:Disconnect()a3=nil end;if a4 then a4:Disconnect()a4=nil end;if a5 then a5:Disconnect()a5=nil end;for U in pairs(a2)do a7(U)end end end;c.CRESP_Enable:OnChanged(function()aC(c.CRESP_Enable.Value)end)c.CRESP_Box:OnChanged(aA)c.CRESP_Name:OnChanged(function()for E,x in pairs(a2)do if x.nameLbl then x.nameLbl.Visible=c.CRESP_Name.Value end end end)d.CRESP_NameColor:OnChanged(function()for E,x in pairs(a2)do if x.nameLbl then x.nameLbl.TextColor3=d.CRESP_NameColor.Value end end end)c.CRESP_Distance:OnChanged(function()for E,x in pairs(a2)do if x.distLbl then x.distLbl.Visible=c.CRESP_Distance.Value end end end)d.CRESP_DistColor:OnChanged(function()for E,x in pairs(a2)do if x.distLbl then x.distLbl.TextColor3=d.CRESP_DistColor.Value end end end)d.CRESP_BoxColor:OnChanged(function()for E,x in pairs(a2)do if x.box then x.box.Color3=d.CRESP_BoxColor.Value end end end)c.CRESP_Tracer:OnChanged(function()for E,x in pairs(a2)do if c.CRESP_Tracer.Value and not x.tracer then x.tracer=a8()elseif not c.CRESP_Tracer.Value and x.tracer then pcall(function()x.tracer:Remove()end)x.tracer=nil end end end)local function aD()return e.Workspace:FindFirstChild("Rifts")end;local aE,aF,aG,aH={},nil,nil,nil;local aI=b.ESP:AddLeftGroupbox("Rifts ESP","aperture")aI:AddToggle("RESP_Enable",{Text="Enable Rifts ESP",Default=false})aI:AddToggle("RESP_Box",{Text="Box",Default=true}):AddColorPicker("RESP_BoxColor",{Default=Color3.fromRGB(255,80,200),Title="Box Color"})aI:AddToggle("RESP_Name",{Text="Name",Default=true}):AddColorPicker("RESP_NameColor",{Default=Color3.new(1,1,1),Title="Name Color"})aI:AddToggle("RESP_Distance",{Text="Distance",Default=true}):AddColorPicker("RESP_DistColor",{Default=Color3.new(1,1,1),Title="Distance Color"})aI:AddToggle("RESP_Tracer",{Text="Tracer",Default=true})local function aJ(Z)local x=aE[Z]if not x then return end;pcall(function()if x.box then x.box:Destroy()end end)pcall(function()if x.gui then x.gui:Destroy()end end)pcall(function()if x.tracer then x.tracer:Remove()end end)aE[Z]=nil end;local function aK(ab)if aE[ab]then return end;local x={}if c.RESP_Box.Value then local ac=Instance.new("BoxHandleAdornment")ac.Name="CerberusRiftBox"ac.Adornee=ab;ac.AlwaysOnTop=true;ac.Size=ab.Size or Vector3.new(6,6,6)ac.ZIndex=10;ac.Color3=d.RESP_BoxColor.Value;ac.Transparency=0.15;ac.Parent=ab;x.box=ac end;local ad=Instance.new("BillboardGui")ad.Name="CerberusRiftBB"ad.Adornee=ab;ad.AlwaysOnTop=true;ad.Size=UDim2.new(0,220,0,42)ad.StudsOffset=Vector3.new(0,(ab.Size and ab.Size.Y or 6)*0.6+1.5,0)ad.Parent=ab;x.gui=ad;local ae=Instance.new("TextLabel")ae.BackgroundTransparency=1;ae.Size=UDim2.new(1,0,0,20)ae.Font=Enum.Font.GothamSemibold;ae.TextScaled=true;ae.TextColor3=d.RESP_NameColor.Value;ae.Text="Rift"ae.Visible=c.RESP_Name.Value;ae.Parent=ad;x.nameLbl=ae;local af=Instance.new("TextLabel")af.BackgroundTransparency=1;af.Position=UDim2.new(0,0,0,20)af.Size=UDim2.new(1,0,0,20)af.Font=Enum.Font.Gotham;af.TextScaled=true;af.TextColor3=d.RESP_DistColor.Value;af.Text=""af.Visible=c.RESP_Distance.Value;af.Parent=ad;x.distLbl=af;if c.RESP_Tracer.Value then x.tracer=a8()end;aE[ab]=x end;local function aL()if not aE or not f.camera then return end;local ah=f.camera;local aj=ah.ViewportSize;local ai=d.ESP_TracerOrigin and d.ESP_TracerOrigin.Value or"Bottom"local ap=ag(ah,ai)local aq=d.RESP_BoxColor and d.RESP_BoxColor.Value or Color3.new(1,1,1)local ar=d.RESP_NameColor and d.RESP_NameColor.Value or Color3.new(1,1,1)local as=d.RESP_DistColor and d.RESP_DistColor.Value or Color3.new(1,1,1)local at=c.RESP_Tracer and c.RESP_Tracer.Value or false;local am=f.humanoidRootPart;for U,x in pairs(aE)do repeat if typeof(U)~="Instance"or not U.Parent then aJ(U)break end;local au,al=pcall(function()return U.Position end)if not au or typeof(al)~="Vector3"then aJ(U)break end;if x.distLbl and am then local an=(am.Position-al).Magnitude;local aw=math.floor(an+0.5)pcall(function()x.distLbl.Text=("%d studs"):format(aw)x.distLbl.TextColor3=as;x.distLbl.Visible=c.RESP_Distance.Value end)end;if x.box then pcall(function()x.box.Color3=aq end)end;if x.nameLbl then pcall(function()x.nameLbl.TextColor3=ar end)end;if x.tracer then local ax,ay=ah:WorldToViewportPoint(al)local az=at and ay;pcall(function()if x.tracer.Visible~=nil then x.tracer.Visible=az end;if az then x.tracer.From=Vector2.new(aj.X/2,ap)x.tracer.To=Vector2.new(ax.X,ax.Y)end end)end until true end end;local function aM()for U in pairs(aE)do aJ(U)end;local aB=aD()if not aB then return end;for E,A in ipairs(aB:GetChildren())do if A:IsA("BasePart")or A:IsA("MeshPart")then aK(A)end end end;local function aN(Y)if Y then local aB=aD()if not aB then return end;if not aF then aF=aB.ChildAdded:Connect(function(Z)if(Z:IsA("BasePart")or Z:IsA("MeshPart"))and c.RESP_Enable.Value then aK(Z)end end)end;if not aG then aG=aB.ChildRemoved:Connect(function(Z)aJ(Z)end)end;if not aH then aH=e.RunService.RenderStepped:Connect(aL)end;aM()else if aF then aF:Disconnect()aF=nil end;if aG then aG:Disconnect()aG=nil end;if aH then aH:Disconnect()aH=nil end;for U in pairs(aE)do aJ(U)end end end;c.RESP_Enable:OnChanged(function()aN(c.RESP_Enable.Value)end)c.RESP_Box:OnChanged(aM)c.RESP_Name:OnChanged(function()for E,x in pairs(aE)do if x.nameLbl then x.nameLbl.Visible=c.RESP_Name.Value end end end)d.RESP_NameColor:OnChanged(function()for E,x in pairs(aE)do if x.nameLbl then x.nameLbl.TextColor3=d.RESP_NameColor.Value end end end)c.RESP_Distance:OnChanged(function()for E,x in pairs(aE)do if x.distLbl then x.distLbl.Visible=c.RESP_Distance.Value end end end)d.RESP_DistColor:OnChanged(function()for E,x in pairs(aE)do if x.distLbl then x.distLbl.TextColor3=d.RESP_DistColor.Value end end end)d.RESP_BoxColor:OnChanged(function()for E,x in pairs(aE)do if x.box then x.box.Color3=d.RESP_BoxColor.Value end end end)c.RESP_Tracer:OnChanged(function()for E,x in pairs(aE)do if c.RESP_Tracer.Value and not x.tracer then x.tracer=a8()elseif not c.RESP_Tracer.Value and x.tracer then pcall(function()x.tracer:Remove()end)x.tracer=nil end end end)w()local function ag(ah,ai)local aj=ah.ViewportSize;if ai=="Top"then return 0 end;if ai=="Middle"then return aj.Y/2 end;return aj.Y end;local function ak(al)if not c.ESP_LimitRange or not c.ESP_LimitRange.Value then return true end;local am=f.humanoidRootPart;if not am then return true end;local an=(am.Position-al).Magnitude;return an<=(d.ESP_MaxRange.Value or 150)end;local aO={["Alluring Apple"]=true,["Apple"]=true,["Banana"]=true,["Chakra Fruit"]=true,["Fruit Of Forgetfulness"]=true,["Life Up Fruit"]=true,["Mango"]=true,["Orange"]=true,["Pear"]=true}local aP,aQ,aR,aS={},nil,nil,nil;local aT=b.ESP:AddRightGroupbox("Fruit ESP","cherry")aT:AddToggle("FESP_Enable",{Text="Enable Fruit ESP",Default=false})aT:AddToggle("FESP_Box",{Text="Box",Default=true}):AddColorPicker("FESP_BoxColor",{Default=Color3.fromRGB(140,230,120),Title="Box Color"})aT:AddToggle("FESP_Name",{Text="Name",Default=true}):AddColorPicker("FESP_NameColor",{Default=Color3.new(1,1,1),Title="Name Color"})aT:AddToggle("FESP_Distance",{Text="Distance",Default=true}):AddColorPicker("FESP_DistColor",{Default=Color3.new(1,1,1),Title="Distance Color"})aT:AddToggle("FESP_Tracer",{Text="Tracer",Default=false})local function aU(Z)local x=aP[Z]if not x then return end;pcall(function()if x.box then x.box:Destroy()end end)pcall(function()if x.gui then x.gui:Destroy()end end)pcall(function()if x.tracer then x.tracer:Remove()end end)aP[Z]=nil end;local function aV(ab)if aP[ab]then return end;local x={}if c.FESP_Box.Value then local ac=Instance.new("BoxHandleAdornment")ac.Name="CerberusFruitBox"ac.Adornee=ab;ac.AlwaysOnTop=true;ac.Size=ab.Size or Vector3.new(2.5,2.5,2.5)ac.ZIndex=10;ac.Color3=d.FESP_BoxColor.Value;ac.Transparency=0.2;ac.Parent=ab;x.box=ac end;local ad=Instance.new("BillboardGui")ad.Name="CerberusFruitBB"ad.Adornee=ab;ad.AlwaysOnTop=true;ad.Size=UDim2.new(0,200,0,42)ad.StudsOffset=Vector3.new(0,(ab.Size and ab.Size.Y or 2.5)*0.6+1,0)ad.Parent=ab;x.gui=ad;local ae=Instance.new("TextLabel")ae.BackgroundTransparency=1;ae.Size=UDim2.new(1,0,0,20)ae.Font=Enum.Font.GothamSemibold;ae.TextScaled=true;ae.TextColor3=d.FESP_NameColor.Value;ae.Text=ab.Name;ae.Visible=c.FESP_Name.Value;ae.Parent=ad;x.nameLbl=ae;local af=Instance.new("TextLabel")af.BackgroundTransparency=1;af.Position=UDim2.new(0,0,0,20)af.Size=UDim2.new(1,0,0,20)af.Font=Enum.Font.Gotham;af.TextScaled=true;af.TextColor3=d.FESP_DistColor.Value;af.Text=""af.Visible=c.FESP_Distance.Value;af.Parent=ad;x.distLbl=af;if c.FESP_Tracer.Value then x.tracer=a8()end;aP[ab]=x end;local function aW()if not aP or not f.camera then return end;local ah=f.camera;local ai=d.ESP_TracerOrigin and d.ESP_TracerOrigin.Value or"Bottom"local ap=ag(ah,ai)local aj=ah.ViewportSize;local aq=d.FESP_BoxColor and d.FESP_BoxColor.Value or Color3.new(1,1,1)local ar=d.FESP_NameColor and d.FESP_NameColor.Value or Color3.new(1,1,1)local as=d.FESP_DistColor and d.FESP_DistColor.Value or Color3.new(1,1,1)local at=c.FESP_Tracer and c.FESP_Tracer.Value or false;local am=f.humanoidRootPart;for U,x in pairs(aP)do repeat if typeof(U)~="Instance"or not U.Parent then aU(U)break end;local au,al=pcall(function()return U.Position end)if not au or typeof(al)~="Vector3"then aU(U)break end;local av=ak(al)if x.box then pcall(function()x.box.Color3=aq;x.box.Visible=av end)end;if x.nameLbl then pcall(function()x.nameLbl.TextColor3=ar;x.nameLbl.Visible=c.FESP_Name.Value and av end)end;if x.distLbl and am then local an=(am.Position-al).Magnitude;pcall(function()x.distLbl.Text=("%d studs"):format(math.floor(an+0.5))x.distLbl.TextColor3=as;x.distLbl.Visible=c.FESP_Distance.Value and av end)end;if x.tracer then local ax,ay=ah:WorldToViewportPoint(al)local az=at and ay and av;pcall(function()if x.tracer.Visible~=nil then x.tracer.Visible=az end;if az then x.tracer.From=Vector2.new(aj.X/2,ap)x.tracer.To=Vector2.new(ax.X,ax.Y)end end)end until true end end;local function aX()for U in pairs(aP)do aU(U)end;for E,A in ipairs(e.Workspace:GetDescendants())do if(A:IsA("BasePart")or A:IsA("MeshPart"))and aO[A.Name]then aV(A)end end end;local function aY(Y)if Y then if not aQ then aQ=e.Workspace.DescendantAdded:Connect(function(Z)if(Z:IsA("BasePart")or Z:IsA("MeshPart"))and aO[Z.Name]and c.FESP_Enable.Value then aV(Z)end end)end;if not aR then aR=e.Workspace.DescendantRemoving:Connect(function(Z)if aP[Z]then aU(Z)end end)end;if not aS then aS=e.RunService.RenderStepped:Connect(aW)end;aX()else if aQ then aQ:Disconnect()aQ=nil end;if aR then aR:Disconnect()aR=nil end;if aS then aS:Disconnect()aS=nil end;for U in pairs(aP)do aU(U)end end end;c.FESP_Enable:OnChanged(function()if c.FESP_Enable.Value then aY(true)else aY(false)end end)c.FESP_Box:OnChanged(function()aX()end)c.FESP_Name:OnChanged(function()for E,x in pairs(aP)do if x.nameLbl then x.nameLbl.Visible=c.FESP_Name.Value end end end)d.FESP_NameColor:OnChanged(function()for E,x in pairs(aP)do if x.nameLbl then x.nameLbl.TextColor3=d.FESP_NameColor.Value end end end)c.FESP_Distance:OnChanged(function()for E,x in pairs(aP)do if x.distLbl then x.distLbl.Visible=c.FESP_Distance.Value end end end)d.FESP_DistColor:OnChanged(function()for E,x in pairs(aP)do if x.distLbl then x.distLbl.TextColor3=d.FESP_DistColor.Value end end end)d.FESP_BoxColor:OnChanged(function()for E,x in pairs(aP)do if x.box then x.box.Color3=d.FESP_BoxColor.Value end end end)c.FESP_Tracer:OnChanged(function()for E,x in pairs(aP)do if c.FESP_Tracer.Value and not x.tracer then x.tracer=a8()elseif not c.FESP_Tracer.Value and x.tracer then pcall(function()x.tracer:Remove()end)x.tracer=nil end end end)local aZ={["Aqua Gem"]=true,["Black Flame Gem"]=true,["Flame Gem"]=true,["Chakra Heart"]=true,["Gold Bracelet"]=true,["Gold Enclosed Ring"]=true,["Gold Necklace"]=true,["Gold Ring"]=true,["Ground Gem"]=true,["Ice Gem"]=true,["Poison Gem"]=true,["Ring Of A Helping Hand"]=true,["Ring Of Dexterity"]=true,["Ring Of Favor"]=true,["Ring Of Infusion"]=true,["Ring Of Resistance"]=true,["Ring Of Nourishment"]=true,["Ring Of Remedy"]=true,["Ring Of The Neoncat"]=true,["Ring Of Vitality"]=true,["Silver Bracelet"]=true,["Silver Enclosed Ring"]=true,["Silver Necklace"]=true,["Silver Ring"]=true,["Spark Gem"]=true,["Wind Gem"]=true}local a_,b0,b1,b2={},nil,nil,nil;local b3=b.ESP:AddLeftGroupbox("Trinket ESP","gem")b3:AddToggle("TESP_Enable",{Text="Enable Trinket ESP",Default=false})b3:AddToggle("TESP_Box",{Text="Box",Default=true}):AddColorPicker("TESP_BoxColor",{Default=Color3.fromRGB(255,170,60),Title="Box Color"})b3:AddToggle("TESP_Name",{Text="Name",Default=true}):AddColorPicker("TESP_NameColor",{Default=Color3.new(1,1,1),Title="Name Color"})b3:AddToggle("TESP_Distance",{Text="Distance",Default=true}):AddColorPicker("TESP_DistColor",{Default=Color3.new(1,1,1),Title="Distance Color"})b3:AddToggle("TESP_Tracer",{Text="Tracer",Default=true})local function b4(Z)local x=a_[Z]if not x then return end;pcall(function()if x.box then x.box:Destroy()end end)pcall(function()if x.gui then x.gui:Destroy()end end)pcall(function()if x.tracer then x.tracer:Remove()end end)a_[Z]=nil end;local function b5(ab)if a_[ab]then return end;local x={}if c.TESP_Box.Value then local ac=Instance.new("BoxHandleAdornment")ac.Name="CerberusTrinketBox"ac.Adornee=ab;ac.AlwaysOnTop=true;ac.Size=ab.Size or Vector3.new(2,2,2)ac.ZIndex=10;ac.Color3=d.TESP_BoxColor.Value;ac.Transparency=0.2;ac.Parent=ab;x.box=ac end;local ad=Instance.new("BillboardGui")ad.Name="CerberusTrinketBB"ad.Adornee=ab;ad.AlwaysOnTop=true;ad.Size=UDim2.new(0,220,0,42)ad.StudsOffset=Vector3.new(0,(ab.Size and ab.Size.Y or 2)*0.6+1,0)ad.Parent=ab;x.gui=ad;local ae=Instance.new("TextLabel")ae.BackgroundTransparency=1;ae.Size=UDim2.new(1,0,0,20)ae.Font=Enum.Font.GothamSemibold;ae.TextScaled=true;ae.TextColor3=d.TESP_NameColor.Value;ae.Text=ab.Name;ae.Visible=c.TESP_Name.Value;ae.Parent=ad;x.nameLbl=ae;local af=Instance.new("TextLabel")af.BackgroundTransparency=1;af.Position=UDim2.new(0,0,0,20)af.Size=UDim2.new(1,0,0,20)af.Font=Enum.Font.Gotham;af.TextScaled=true;af.TextColor3=d.TESP_DistColor.Value;af.Text=""af.Visible=c.TESP_Distance.Value;af.Parent=ad;x.distLbl=af;if c.TESP_Tracer.Value then x.tracer=a8()end;a_[ab]=x end;local function b6()if not a_ or not f.camera then return end;local ah=f.camera;local ai=d.ESP_TracerOrigin and d.ESP_TracerOrigin.Value or"Bottom"local ap=ag(ah,ai)local aj=ah.ViewportSize;local aq=d.TESP_BoxColor and d.TESP_BoxColor.Value or Color3.new(1,1,1)local ar=d.TESP_NameColor and d.TESP_NameColor.Value or Color3.new(1,1,1)local as=d.TESP_DistColor and d.TESP_DistColor.Value or Color3.new(1,1,1)local at=c.TESP_Tracer and c.TESP_Tracer.Value or false;local am=f.humanoidRootPart;for U,x in pairs(a_)do repeat if typeof(U)~="Instance"or not U.Parent then b4(U)break end;local au,al=pcall(function()return U.Position end)if not au or typeof(al)~="Vector3"then b4(U)break end;do local b7=false;for E,O in ipairs(e.Players:GetPlayers())do local b8=O.Character;local b9=b8 and(b8:FindFirstChild("HumanoidRootPart")or b8:FindFirstChild("Torso")or b8:FindFirstChild("UpperTorso"))if b9 then if(b9.Position-al).Magnitude<=5 then b7=true;break end end end;if b7 then b4(U)break end end;local av=ak(al)if x.box then pcall(function()x.box.Color3=aq;x.box.Visible=av end)end;if x.nameLbl then pcall(function()x.nameLbl.TextColor3=ar;x.nameLbl.Visible=c.TESP_Name.Value and av end)end;if x.distLbl and am then local an=(am.Position-al).Magnitude;pcall(function()x.distLbl.Text=("%d studs"):format(math.floor(an+0.5))x.distLbl.TextColor3=as;x.distLbl.Visible=c.TESP_Distance.Value and av end)end;if x.tracer then local ax,ay=ah:WorldToViewportPoint(al)local az=at and ay and av;pcall(function()if x.tracer.Visible~=nil then x.tracer.Visible=az end;if az then x.tracer.From=Vector2.new(aj.X/2,ap)x.tracer.To=Vector2.new(ax.X,ax.Y)end end)end until true end end;local function ba()for U in pairs(a_)do b4(U)end;for E,A in ipairs(e.Workspace:GetDescendants())do if(A:IsA("BasePart")or A:IsA("MeshPart"))and aZ[A.Name]then b5(A)end end end;local function bb(Y)if Y then if not b0 then b0=e.Workspace.DescendantAdded:Connect(function(Z)if(Z:IsA("BasePart")or Z:IsA("MeshPart"))and aZ[Z.Name]and c.TESP_Enable.Value then b5(Z)end end)end;if not b1 then b1=e.Workspace.DescendantRemoving:Connect(function(Z)if a_[Z]then b4(Z)end end)end;if not b2 then b2=e.RunService.RenderStepped:Connect(b6)end;ba()else if b0 then b0:Disconnect()b0=nil end;if b1 then b1:Disconnect()b1=nil end;if b2 then b2:Disconnect()b2=nil end;for U in pairs(a_)do b4(U)end end end;c.TESP_Enable:OnChanged(function()if c.TESP_Enable.Value then bb(true)else bb(false)end end)c.TESP_Box:OnChanged(function()ba()end)c.TESP_Name:OnChanged(function()for E,x in pairs(a_)do if x.nameLbl then x.nameLbl.Visible=c.TESP_Name.Value end end end)d.TESP_NameColor:OnChanged(function()for E,x in pairs(a_)do if x.nameLbl then x.nameLbl.TextColor3=d.TESP_NameColor.Value end end end)c.TESP_Distance:OnChanged(function()for E,x in pairs(a_)do if x.distLbl then x.distLbl.Visible=c.TESP_Distance.Value end end end)d.TESP_DistColor:OnChanged(function()for E,x in pairs(a_)do if x.distLbl then x.distLbl.TextColor3=d.TESP_DistColor.Value end end end)d.TESP_BoxColor:OnChanged(function()for E,x in pairs(a_)do if x.box then x.box.Color3=d.TESP_BoxColor.Value end end end)c.TESP_Tracer:OnChanged(function()for E,x in pairs(a_)do if c.TESP_Tracer.Value and not x.tracer then x.tracer=a8()elseif not c.TESP_Tracer.Value and x.tracer then pcall(function()x.tracer:Remove()end)x.tracer=nil end end end)w()end
